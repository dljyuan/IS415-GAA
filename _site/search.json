[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "Welcome to IS415 Geospatial Analytics and Applications\nThis is the course website of IS415 I study this term. You will find my course work on this website.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 11: Processing and Visualising Flow Data\n\n\n\n\n\n\nHands-on Exercise\n\n\n\n\n\n\n\n\n\nMar 24, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 10: Geographically Weighted Predictive Models\n\n\n\n\n\n\nHands-on Exercise\n\n\n\n\n\n\n\n\n\nMar 15, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 07: Geographically Weighted Predictive Models\n\n\n\n\n\n\nHands-on Exercise\n\n\n\n\n\n\n\n\n\nMar 15, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nTake-Home Assignment 3: Prototyping Modules for Geospatial Analytics Shiny Application\n\n\n\n\n\n\nTake-home Assignment\n\n\n\n\n\n\n\n\n\nMar 15, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 06: Geographical Segmentation with Spatially Constrained Clustering Techniques\n\n\n\n\n\n\nIn-class Exercise\n\n\n\n\n\n\n\n\n\nMar 4, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 08: Geographical Segmentation with Spatially Constrained Clustering Techniques\n\n\n\n\n\n\nHands-on Exercise\n\n\n\n\n\n\n\n\n\nFeb 22, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 09: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method\n\n\n\n\n\n\nHands-on Exercise\n\n\n\n\n\n\n\n\n\nFeb 22, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Assignment 02: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan PART-1\n\n\n\n\n\n\nTake-home Assignment\n\n\n\n\n\n\n\n\n\nFeb 12, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Assignment 02: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan PART-2\n\n\n\n\n\n\nTake-home Assignment\n\n\n\n\n\n\n\n\n\nFeb 12, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 05: Global Measures of Spatial Autocorrelation\n\n\n\n\n\n\nIn-class Exercise\n\n\n\n\n\n\n\n\n\nFeb 5, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 05: Spatial Weights and Applications\n\n\n\n\n\n\nHands-on Exercise\n\n\n\n\n\n\n\n\n\nJan 25, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 06: Global Measures of Spatial Autocorrelation\n\n\n\n\n\n\nHands-on Exercise\n\n\n\n\n\n\n\n\n\nJan 25, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exericise 07: Local Measures of Spatial Autocorrelation\n\n\n\n\n\n\nHands-on Exercise\n\n\n\n\n\n\n\n\n\nJan 25, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nIn-Class Exercise 04:\n\n\n\n\n\n\nIn-class Exercise\n\n\n\n\n\n\n\n\n\nJan 25, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 03B: Network Constrained Spatial Point Patterns Analysis\n\n\n\n\n\n\nHands-on Exercise\n\n\n\n\n\n\n\n\n\nJan 22, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 03: Kernel Density Estimation\n\n\n\n\n\n\nIn-class Exercise\n\n\n\n\n\n\n\n\n\nJan 22, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Assignment 01: Discovering geographical distribution of Grab hailing services in Singapore\n\n\n\n\n\n\nTake-home Assignment\n\n\n\n\n\n\n\n\n\nJan 22, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 3A: 1st Order Spatial Point Patterns Analysis Methods\n\n\n\n\n\n\nHands-on Exercise\n\n\n\n\n\n\n\n\n\nJan 18, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 4: 2nd Order Spatial Point Patterns Analysis Methods\n\n\n\n\n\n\nHands-on Exercise\n\n\n\n\n\n\n\n\n\nJan 18, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 2: Thematic Mapping and GeoVisualisation with R\n\n\n\n\n\n\nHands-on Exercise\n\n\n\n\n\n\n\n\n\nJan 15, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 02: R for Geospatial Data Science\n\n\n\n\n\n\nIn-class Exercise\n\n\n\n\n\n\n\n\n\nJan 15, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 1: Geospatial Data Wrangling with R\n\n\n\n\n\n\nHands-on Exercise\n\n\n\n\n\n\n\n\n\nJan 8, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 01: Nothing here\n\n\n\n\n\n\nIn-class Exercise\n\n\n\n\n\n\n\n\n\nJan 8, 2024\n\n\nJin Yuan\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Take-home_Assignment/Take-home_Assignment03.html",
    "href": "Take-home_Assignment/Take-home_Assignment03.html",
    "title": "Take-Home Assignment 3: Prototyping Modules for Geospatial Analytics Shiny Application",
    "section": "",
    "text": "1. Introduction\nOptimizing the distribution of recycling bins is essential for promoting sustainable waste management practices. This report focuses on the hotspot identification aspect of geospatial analysis to pinpoint areas with high concentrations of recycling bins (hotspots) and areas with low concentrations (cold spots) in Singapore. By identifying these spatial patterns, we aim to provide insights for targeted interventions to enhance recycling rates and optimize waste management strategies.\n\n\n2. Objective\nOur objective is to conduct hotspot identification analysis using geospatial analytics to identify areas of interest for policymakers and stakeholders. By leveraging global and local measures of spatial autocorrelation, we aim to pinpoint hotspots and cold spots of recycling bin distribution in Singapore, providing actionable insights for optimizing bin placement and promoting recycling behavior.\n\n\n3. Storyboard\n\nIntroduction: Provide an overview of the objective and significance of hotspot identification in optimizing recycling bin distribution.\nData Collection and Preprocessing: Gather location data of recycling bins from relevant sources and preprocess the data to ensure accuracy and consistency.\nHotspot Identification Analysis: Utilize global measures of spatial autocorrelation (e.g., Moran’s I) and local indicators of spatial association (LISA) to identify hotspots and cold spots of recycling bin distribution.\n\nCalculate Moran’s I to assess the overall clustering pattern of recycling bins.\nConduct LISA analysis to identify statistically significant clusters of hotspots and cold spots.\n\nInteractive Visualization: Present the results of the hotspot analysis using interactive maps, highlighting areas of interest for targeted interventions.\nConclusion: Summarize the key findings of the hotspot identification analysis and their implications for waste management policies in Singapore.\n\n\n\n4. UI Design\nThe user interface of the shiny application will feature:\n\nInteractive Map: Displaying the spatial distribution of recycling bins and highlighting hotspots and cold spots. Users can zoom in/out and pan across the map to explore different areas.\nFilters and Controls: Allowing users to customize the display by adjusting parameters such as bin type, and statistical significance level for hotspot identification.\nInformation Panels: Providing contextual information about the hotspot identification methodology and key findings. This includes explanations of Moran’s I and LISA analysis and interpretation guidelines for the identified hotspots and cold spots.\n\n\n\n5. Data Wrangling & Analysis\n\npacman::p_load(sf, sp, sfdep, tmap, tidyverse, plotly)\n\nBlue Bin\n\nbluebins &lt;- st_read(dsn = \"../data/take-home3\", \n                 layer = \"RECYCLINGBINS\")\n\nReading layer `RECYCLINGBINS' from data source \n  `C:\\dljyuan\\IS415-GAA\\data\\take-home3' using driver `ESRI Shapefile'\nSimple feature collection with 12578 features and 18 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 11519.15 ymin: 28097.64 xmax: 45292.59 ymax: 48741.06\nProjected CRS: SVY21\n\n\nMaster Plan Subzone\n\nmpsz &lt;- st_read(dsn = \"../data/take-home3\", \n                 layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source `C:\\dljyuan\\IS415-GAA\\data\\take-home3' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nE-Waste Bin\n\newbins &lt;- read_csv(\"../data/take-home3/EWbins.csv\")\n\nIncentive Bin\n\ninbins &lt;- read_csv(\"../data/take-home3/RVMbins.csv\")\n\nSG Population\n\npop &lt;- read_csv(\"../data/take-home3/PopulationSG_2023.csv\")\n\n\npopdata &lt;- pop %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \n  select(`PA`, `SZ`, \n       `TOTAL`)\n\n\npopdata &lt;- popdata %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper))\n\n\npop &lt;- left_join(mpsz, popdata,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\n# Check for invalid geometries\ninvalid_geoms &lt;- !st_is_valid(pop)\n# Fix invalid geometries\npop[invalid_geoms, ] &lt;- st_make_valid(pop[invalid_geoms, ])\n\n\npop &lt;- st_transform(pop, 3414)\nbluebins &lt;- st_transform(bluebins, 3414)\newbins &lt;- st_transform(ewbins, 3414)\ninbins &lt;- st_transform(inbins, 3414)\n\n\ntm_shape(pop)+\n  tm_fill(\"TOTAL\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Population\") +\n  tm_layout(main.title = \"Distribution of SG Population by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\ntm_shape(pop) +\n  tm_fill(\"TOTAL\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\ntmap_mode('plot')\ntm_shape(pop)+\n  tm_polygons()+\n  tm_shape(bluebins)+\n  tm_symbols(size = 0.005, col = \"blue\", shape = 2)\n\n\n\n\n\n\n\n\n\n# Function to geocode using OpenStreetMap Nominatim API\ngeocode_osm &lt;- function(postal_codes) {\n  result &lt;- lapply(postal_codes, function(code) {\n    url &lt;- paste0(\"https://nominatim.openstreetmap.org/search?format=json&postalcode=\", code, \"&country=Singapore\")\n    data &lt;- jsonlite::fromJSON(url)\n    if (length(data) &gt; 0) {\n      return(data[1, c(\"lat\", \"lon\")])\n    } else {\n      return(NA)\n    }\n  })\n  result &lt;- do.call(rbind, result)\n  return(result)\n}\n\n# Extract postal codes from the CSV data\npostal_codes &lt;- ewbins$`Postal Code`\n\n# Geocode postal codes using OpenStreetMap Nominatim API\ngeo_data_osm &lt;- geocode_osm(postal_codes)\n\n# Bind latitude and longitude data back to the original data frame\newbins &lt;- cbind(ewbins, geo_data_osm)\n\n\n# Identify rows with missing lat or lon\nmissing_coords &lt;- ewbins[is.na(ewbins$lat) | is.na(ewbins$lon), c(\"Postal Code\", \"lat\", \"lon\")]\n\n# Print the rows with missing coordinates\nprint(missing_coords)\n\n\nrow_indices &lt;- c(19, 21, 23, 62, 64, 71, 123, 142, 146, 153, 164)\newbins$lat[row_indices] &lt;- c(1.353990, \n                             1.369590, \n                             1.285980, \n                             1.3732, \n                             1.3731, \n                             1.3106,\n                             1.3247, \n                             1.2832, \n                             1.3335, \n                             1.3625, \n                             1.3840)  \n\newbins$lon[row_indices] &lt;- c(103.944250, \n                             103.846900, \n                             103.827370, \n                             103.8458, \n                             103.9337, \n                             103.8363,\n                             103.7468, \n                             103.8058, \n                             103.7403, \n                             103.8347, \n                             103.7451)\n\n\n# Convert to spatial points in WGS 84 (EPSG:4326)\ncoordinates &lt;- st_as_sf(ewbins, coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Transform coordinates to SVY21 (EPSG:3414)\newbins &lt;- st_transform(coordinates, 3414)\n\n\ntmap_mode('view')\ntm_basemap(\"OpenStreetMap\") + \n  tm_shape(pop)+\n  tm_polygons(alpha = 0.5)+\n  tm_shape(ewbins)+\n  tm_symbols(size = 0.02, col = \"green\", shape = 19, scale = 3)+\n  tm_view(set.view = 10, set.zoom.limits = c(10,15))\n\n\n\n\n\n\n# Extract postal codes from the CSV data\npostal_codes &lt;- inbins$`Postal Code`\n\n# Geocode postal codes using OpenStreetMap Nominatim API\ngeo_data_osm &lt;- geocode_osm(postal_codes)\n\n# Bind latitude and longitude data back to the original data frame\ninbins &lt;- cbind(inbins, geo_data_osm)\n\n# Identify rows with missing lat or lon\nmissing_coords &lt;- inbins[is.na(inbins$lat) | is.na(inbins$lon), c(\"Postal Code\", \"lat\", \"lon\")]\n\n# Print the rows with missing coordinates\nprint(missing_coords)\n\n\nrow_indices &lt;- c(3, 8, 10, 12, 14, 24, 25, 26)\ninbins$lat[row_indices] &lt;- c(1.37045, \n                            1.32099,\n                            1.33306,\n                            1.35547,\n                            1.29948,\n                            1.34649,\n                            1.35878,\n                            1.39071)  \n\ninbins$lon[row_indices] &lt;- c(103.88808,\n                             103.88775,\n                             103.96604,\n                             103.85110,\n                             103.84547,\n                             103.72905,\n                             103.75281,\n                             103.74852)\n\n\n# Convert to spatial points in WGS 84 (EPSG:4326)\ncoordinates &lt;- st_as_sf(inbins, coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Transform coordinates to SVY21 (EPSG:3414)\ninbins &lt;- st_transform(coordinates, 3414)\n\n\nsubzone_matched &lt;- st_intersection(bluebins, pop)\nsubzone_matched &lt;- st_drop_geometry(subzone_matched)\njoined_data &lt;- left_join(pop, subzone_matched)\n\n\njoined_data_clean &lt;- na.omit(joined_data)\n\n\njoined_data_clean &lt;- joined_data[complete.cases(joined_data$ADDRESSSTR), ]\n\n\ngrouped_data &lt;- joined_data_clean %&gt;%\n  group_by(SUBZONE_N, REGION_N) %&gt;%\n  summarize(count = n())\n\ngrouped_data &lt;- st_drop_geometry(grouped_data)\ngrouped_data &lt;- left_join(pop, grouped_data)\n\ncolumns_to_keep &lt;- c(\"SUBZONE_N\", \"REGION_N\", \"count\")  \n\ngrouped_data &lt;- grouped_data[, columns_to_keep]\n\ngrouped_data &lt;- grouped_data %&gt;%\n  mutate(count = ifelse(is.na(count), 0, count))\n\n\ngrouped_data &lt;- grouped_data %&gt;% \n  mutate(TYPE = \"BLUEBIN\")\n\n\n#bluebins_hs &lt;- write_rds(grouped_data, \"../data/take-home3/bluebins_hs.rds\")\n#ewbins_hs &lt;- write_rds(grouped_data, \"../data/take-home3/ewbins_hs.rds\")\n#inbins_hs &lt;- write_rds(grouped_data, \"../data/take-home3/inbins_hs.rds\")\n\n\nbluebins_hs &lt;- read_rds(\"../data/take-home3/bluebins_dist.rds\")\newbins_hs &lt;- read_rds(\"../data/take-home3/ewbins_dist.rds\")\ninbins_hs &lt;- read_rds(\"../data/take-home3/inbins_dist.rds\")\n\n\ntmap_mode(\"plot\")\ntm_shape(bluebins_hs) +\n  tm_fill(\"count\",\n          style = \"equal\",\n          palette = \"Greens\",\n          title = \"Number of Bins\") +\n  tm_layout(main.title = \"Distribution of Blue Bins\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type = \"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n\n\n\n\n\n\n\n\n\ntm_shape(bluebins_hs) +\n  tm_fill(\"count\",\n          style = \"equal\",\n          palette = \"Greens\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nwm_q &lt;- bluebins_hs %&gt;%\n  mutate(nb = st_contiguity(geometry, queen = TRUE),\n         wt = st_weights(nb,\n                         style = \"W\",\n                         allow_zero = TRUE),\n         .before = 1) \nwm_q\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                         nb\n1         6, 36, 52, 70, 91\n2              3, 5, 72, 75\n3  2, 5, 37, 42, 43, 75, 86\n4                         0\n5  2, 3, 43, 71, 72, 73, 77\n6        1, 52, 81, 94, 293\n7                         0\n8                         0\n9                         0\n10                       14\n                                                                            wt\n1                                                      0.2, 0.2, 0.2, 0.2, 0.2\n2                                                       0.25, 0.25, 0.25, 0.25\n3  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n4                                                                         NULL\n5  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n6                                                      0.2, 0.2, 0.2, 0.2, 0.2\n7                                                                         NULL\n8                                                                         NULL\n9                                                                         NULL\n10                                                                           1\n                 SUBZONE_N       REGION_N count                       geometry\n1              MARINA EAST CENTRAL REGION     0 MULTIPOLYGON (((33222.98 29...\n2         INSTITUTION HILL CENTRAL REGION     0 MULTIPOLYGON (((28481.45 30...\n3           ROBERTSON QUAY CENTRAL REGION     0 MULTIPOLYGON (((28087.34 30...\n4  JURONG ISLAND AND BUKOM    WEST REGION     0 MULTIPOLYGON (((14557.7 304...\n5             FORT CANNING CENTRAL REGION     0 MULTIPOLYGON (((29542.53 31...\n6         MARINA EAST (MP) CENTRAL REGION     0 MULTIPOLYGON (((35279.55 30...\n7                   SUDONG    WEST REGION     0 MULTIPOLYGON (((15772.59 21...\n8                  SEMAKAU    WEST REGION     0 MULTIPOLYGON (((19843.41 21...\n9           SOUTHERN GROUP CENTRAL REGION     0 MULTIPOLYGON (((30865.58 22...\n10                 SENTOSA CENTRAL REGION     0 MULTIPOLYGON (((26885.45 26...\n      TYPE\n1  BLUEBIN\n2  BLUEBIN\n3  BLUEBIN\n4  BLUEBIN\n5  BLUEBIN\n6  BLUEBIN\n7  BLUEBIN\n8  BLUEBIN\n9  BLUEBIN\n10 BLUEBIN\n\n\n\nset.seed(1234)\nglobal_moran_perm(wm_q$count,\n                       wm_q$nb,\n                       wm_q$wt,\n                  zero.policy = TRUE,\n                  nsim = 999)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.2836, observed rank = 1000, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nlisa &lt;- wm_q %&gt;% \n  mutate(local_moran = local_moran(\n    count, nb, wt, zero.policy = TRUE, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\nwrite_rds(lisa, \"../data/take-home3/lisa_blue.rds\")\n\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii &lt; 0.05)\n\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.7) +\ntm_shape(lisa) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\nwm_idw &lt;- bluebins_hs %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n\nHCSA &lt;- wm_idw %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    count, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\n\n\nHCSA_sig &lt;- HCSA  %&gt;%\n  filter(p_sim &lt; 0.05)\n\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\n6. Prototype\nLibraries Requird:\n\nlibrary(shiny)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(shinythemes)\nlibrary(leaflet)\n\n\n\n\nInteractive Map\n\n\n\n\n\nHSCA/LISA Map\n\n\n\n\n7. Conclusion\nThe hotspot identification analysis provides valuable insights into the spatial distribution of recycling bins in Singapore. By pinpointing hotspots and cold spots, policymakers and stakeholders can prioritize interventions to optimize bin placement and promote recycling behavior."
  }
]