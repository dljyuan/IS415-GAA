[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "Welcome to IS415 Geospatial Analytics and Applications\nThis is the course website of IS415 I study this term. You will find my course work on this website.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nKernel Density Estimation\n\n\n\n\n\n\n\n\n\n\n\nJan 22, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\n1st Order Spatial Point Patterns Analysis Methods\n\n\n\n\n\n\n\n\n\n\n\nJan 18, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\n2nd Order Spatial Point Patterns Analysis Methods\n\n\n\n\n\n\n\n\n\n\n\nJan 18, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 2: Thematic Mapping and GeoVisualisation with R\n\n\n\n\n\n\n\n\n\n\n\nJan 15, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nR for Geospatial Data Science\n\n\n\n\n\n\n\n\n\n\n\nJan 15, 2024\n\n\nJin Yuan\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 1: Geospatial Data Wrangling with R\n\n\n\n\n\n\n\n\n\n\n\nJan 8, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nNothing here\n\n\n\n\n\n\n\n\n\n\n\nJan 8, 2024\n\n\nJin Yuan\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02.html",
    "title": "R for Geospatial Data Science",
    "section": "",
    "text": "Preloading packages\n\n\nShow Code\npacman::p_load(arrow, lubridate, tidyverse, tmap, sf)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02.html#getting-started",
    "href": "In-class_Ex/In-class_Ex02.html#getting-started",
    "title": "R for Geospatial Data Science",
    "section": "",
    "text": "Preloading packages\n\n\nShow Code\npacman::p_load(arrow, lubridate, tidyverse, tmap, sf)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02.html#importing-grab-posisi-dataset",
    "href": "In-class_Ex/In-class_Ex02.html#importing-grab-posisi-dataset",
    "title": "R for Geospatial Data Science",
    "section": "Importing Grab-Posisi Dataset",
    "text": "Importing Grab-Posisi Dataset\n\n\nShow Code\ndf &lt;- arrow::read_parquet(\"/dljyuan/IS415-GAA/data/GrabPosisi/part-00000.parquet\")\n\n\nExamination of Data Content\n\n\nShow Code\nView(df)\n\n\n\n\n\n\n\n\nNote\n\n\n\nAs the data for the timestamp is in integer not datetime, required conversion\n\n\n\n\nShow Code\ndf$pingtimestamp &lt;- as_datetime(df$pingtimestamp)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02.html#converting-into-sf-tibble",
    "href": "In-class_Ex/In-class_Ex02.html#converting-into-sf-tibble",
    "title": "R for Geospatial Data Science",
    "section": "Converting into sf tibble",
    "text": "Converting into sf tibble"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02.html#extracting-trip-starting-locations",
    "href": "In-class_Ex/In-class_Ex02.html#extracting-trip-starting-locations",
    "title": "R for Geospatial Data Science",
    "section": "Extracting trip starting locations",
    "text": "Extracting trip starting locations\n\n\nShow Code\norigin_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(pingtimestamp) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimestamp,\n                        label=TRUE,\n                        abbr=TRUE),\n         start_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp)))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02.html#extracting-destination-locations",
    "href": "In-class_Ex/In-class_Ex02.html#extracting-destination-locations",
    "title": "R for Geospatial Data Science",
    "section": "Extracting destination locations",
    "text": "Extracting destination locations\n\n\nShow Code\ndestination_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(desc(pingtimestamp)) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimestamp,\n                        label=TRUE,\n                        abbr=TRUE),\n         start_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp)))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02.html#write-data",
    "href": "In-class_Ex/In-class_Ex02.html#write-data",
    "title": "R for Geospatial Data Science",
    "section": "Write data",
    "text": "Write data"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02.html#import-data",
    "href": "In-class_Ex/In-class_Ex02.html#import-data",
    "title": "R for Geospatial Data Science",
    "section": "Import data",
    "text": "Import data\n\n\nShow Code\norigin_df &lt;- read_rds(\"/dljyuan/IS415-GAA/data/rds/origin_df.rds\")\ndestination_df &lt;- read_rds(\"/dljyuan/IS415-GAA/data/rds/destination_df.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04.html",
    "title": "2nd Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Show Code\npacman::p_load(sf,spatstat, raster, maptools, tmap)\n\n\n\n\n\n\n# Childcare Data\nchildcare_sf &lt;- st_read(\"../data/geospatial/CHILDCARE.geojson\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `CHILDCARE' from data source \n  `C:\\dljyuan\\IS415-GAA\\data\\geospatial\\CHILDCARE.geojson' using driver `GeoJSON'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n# National Boundary Coastal Outline\nsg_sf &lt;- st_read(dsn = \"../data/geospatial/\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\dljyuan\\IS415-GAA\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 67 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6091 ymin: 1.16639 xmax: 104.0858 ymax: 1.471388\nGeodetic CRS:  WGS 84\n\n# MasterPlan Subzone\nmpsz_sf &lt;- st_read(dsn = \"../data/geospatial/\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\dljyuan\\IS415-GAA\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\n\nst_geometry(childcare_sf)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\nst_geometry(sg_sf)\n\nGeometry set for 1 feature \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6091 ymin: 1.16639 xmax: 104.0858 ymax: 1.471388\nGeodetic CRS:  WGS 84\n\nst_geometry(mpsz_sf)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\n\nst_crs(childcare_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(sg_sf)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]],\n        ID[\"EPSG\",6326]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433],\n        ID[\"EPSG\",8901]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic longitude\",east,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic latitude\",north,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]]]\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nsg_sf &lt;- st_transform(sg_sf, 3414)\nmpsz_sf &lt;- st_transform(mpsz_sf, 3414)\n\n\n\n\n\n\ntmap_mode('plot')\ntm_shape(mpsz_sf) +\n  tm_polygons() +\n  tm_shape(childcare_sf) +\n  tm_dots()\n\n\n\n\n\n\n\n\n\ntmap_mode('view')\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz_sf) +\n  tm_polygons() +\n  tm_shape(childcare_sf) +\n  tm_dots()\n\n\n\n\ntmap_mode('plot')\n\n\n\n\n\n\n\nchildcare &lt;- as_Spatial(childcare_sf)\nsg &lt;- as_Spatial(sg_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\n\n\nsummary(childcare)\n\nObject of class SpatialPointsDataFrame\nCoordinates:\n               min      max\ncoords.x1 11810.03 45404.24\ncoords.x2 25596.33 49300.88\ncoords.x3     0.00     0.00\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nNumber of points: 2290\nData attributes:\n     Name           Description       \n Length:2290        Length:2290       \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n\nsummary(sg)\n\nObject of class SpatialPolygonsDataFrame\nCoordinates:\n        min      max\nx  3040.593 56097.76\ny 16599.186 50324.13\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nData attributes:\n      id_0         iso             name_engli          name_iso        \n Min.   :205   Length:1           Length:1           Length:1          \n 1st Qu.:205   Class :character   Class :character   Class :character  \n Median :205   Mode  :character   Mode  :character   Mode  :character  \n Mean   :205                                                           \n 3rd Qu.:205                                                           \n Max.   :205                                                           \n   name_fao          name_local         name_obsol         name_varia       \n Length:1           Length:1           Length:1           Length:1          \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n  name_nonla         name_frenc         name_spani         name_russi       \n Length:1           Length:1           Length:1           Length:1          \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n  name_arabi         name_chine         waspartof           contains        \n Length:1           Length:1           Length:1           Length:1          \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n  sovereign             iso2               www                fips          \n Length:1           Length:1           Length:1           Length:1          \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n      ison       validfr            validto             pop2000       \n Min.   :702   Length:1           Length:1           Min.   :4018114  \n 1st Qu.:702   Class :character   Class :character   1st Qu.:4018114  \n Median :702   Mode  :character   Mode  :character   Median :4018114  \n Mean   :702                                         Mean   :4018114  \n 3rd Qu.:702                                         3rd Qu.:4018114  \n Max.   :702                                         Max.   :4018114  \n      sqkm        popsqkm      unregion1          unregion2        \n Min.   :526   Min.   :7638   Length:1           Length:1          \n 1st Qu.:526   1st Qu.:7638   Class :character   Class :character  \n Median :526   Median :7638   Mode  :character   Mode  :character  \n Mean   :526   Mean   :7638                                        \n 3rd Qu.:526   3rd Qu.:7638                                        \n Max.   :526   Max.   :7638                                        \n   developing      cis      transition      oecd     wbregion        \n Min.   :1    Min.   :0   Min.   :0    Min.   :0   Length:1          \n 1st Qu.:1    1st Qu.:0   1st Qu.:0    1st Qu.:0   Class :character  \n Median :1    Median :0   Median :0    Median :0   Mode  :character  \n Mean   :1    Mean   :0   Mean   :0    Mean   :0                     \n 3rd Qu.:1    3rd Qu.:0   3rd Qu.:0    3rd Qu.:0                     \n Max.   :1    Max.   :0   Max.   :0    Max.   :0                     \n   wbincome            wbdebt            wbother              ceeac  \n Length:1           Length:1           Length:1           Min.   :0  \n Class :character   Class :character   Class :character   1st Qu.:0  \n Mode  :character   Mode  :character   Mode  :character   Median :0  \n                                                          Mean   :0  \n                                                          3rd Qu.:0  \n                                                          Max.   :0  \n     cemac       ceplg       comesa       eac        ecowas       igad  \n Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :0  \n 1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0  \n Median :0   Median :0   Median :0   Median :0   Median :0   Median :0  \n Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :0  \n 3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0  \n Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :0  \n      ioc         mru         sacu       uemoa        uma        palop  \n Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :0  \n 1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0  \n Median :0   Median :0   Median :0   Median :0   Median :0   Median :0  \n Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :0  \n 3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0  \n Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :0  \n     parta        cacm      eurasec      agadir      saarc       asean  \n Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :1  \n 1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:1  \n Median :0   Median :0   Median :0   Median :0   Median :0   Median :1  \n Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :1  \n 3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:1  \n Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :1  \n     nafta        gcc         csn       caricom        eu         can   \n Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :0  \n 1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0  \n Median :0   Median :0   Median :0   Median :0   Median :0   Median :0  \n Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :0  \n 3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0  \n Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :0  \n      acp      landlocked     aosis        sids      islands       ldc   \n Min.   :0   Min.   :0    Min.   :1   Min.   :1   Min.   :1   Min.   :0  \n 1st Qu.:0   1st Qu.:0    1st Qu.:1   1st Qu.:1   1st Qu.:1   1st Qu.:0  \n Median :0   Median :0    Median :1   Median :1   Median :1   Median :0  \n Mean   :0   Mean   :0    Mean   :1   Mean   :1   Mean   :1   Mean   :0  \n 3rd Qu.:0   3rd Qu.:0    3rd Qu.:1   3rd Qu.:1   3rd Qu.:1   3rd Qu.:0  \n Max.   :0   Max.   :0    Max.   :1   Max.   :1   Max.   :1   Max.   :0  \n\nsummary(mpsz)\n\nObject of class SpatialPolygonsDataFrame\nCoordinates:\n        min      max\nx  2667.538 56396.44\ny 15748.721 50256.33\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nData attributes:\n    OBJECTID       SUBZONE_NO      SUBZONE_N          SUBZONE_C        \n Min.   :  1.0   Min.   : 1.000   Length:323         Length:323        \n 1st Qu.: 81.5   1st Qu.: 2.000   Class :character   Class :character  \n Median :162.0   Median : 4.000   Mode  :character   Mode  :character  \n Mean   :162.0   Mean   : 4.625                                        \n 3rd Qu.:242.5   3rd Qu.: 6.500                                        \n Max.   :323.0   Max.   :17.000                                        \n    CA_IND           PLN_AREA_N         PLN_AREA_C          REGION_N        \n Length:323         Length:323         Length:323         Length:323        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   REGION_C           INC_CRC            FMEL_UPD_D             X_ADDR     \n Length:323         Length:323         Min.   :2014-12-05   Min.   : 5093  \n Class :character   Class :character   1st Qu.:2014-12-05   1st Qu.:21864  \n Mode  :character   Mode  :character   Median :2014-12-05   Median :28465  \n                                       Mean   :2014-12-05   Mean   :27257  \n                                       3rd Qu.:2014-12-05   3rd Qu.:31674  \n                                       Max.   :2014-12-05   Max.   :50425  \n     Y_ADDR        SHAPE_Leng        SHAPE_Area      \n Min.   :19579   Min.   :  871.5   Min.   :   39438  \n 1st Qu.:31776   1st Qu.: 3709.6   1st Qu.:  628261  \n Median :35113   Median : 5211.9   Median : 1229894  \n Mean   :36106   Mean   : 6524.4   Mean   : 2420882  \n 3rd Qu.:39869   3rd Qu.: 6942.6   3rd Qu.: 2106483  \n Max.   :49553   Max.   :68083.9   Max.   :69748299  \n\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 2290 \nextent      : 11810.03, 45404.24, 25596.33, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Name,                                                                                                                                                                                                                                                                                                                                                                       Description \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;CENTRE_NAME&lt;/th&gt; &lt;td&gt;3-IN-1 FAMILY CENTRE&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CENTRE_CODE&lt;/th&gt; &lt;td&gt;ST0027&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;DF7EC9C2478FA5A5&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093631&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,   &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;CENTRE_NAME&lt;/th&gt; &lt;td&gt;Zulfa Kindergarten&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CENTRE_CODE&lt;/th&gt; &lt;td&gt;PT9603&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;527C1231DDD0FA64&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093632&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 1 \nextent      : 3040.593, 56097.76, 16599.19, 50324.13  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 67\nnames       : id_0, iso, name_engli,  name_iso,  name_fao, name_local, name_obsol, name_varia, name_nonla, name_frenc, name_spani, name_russi, name_arabi, name_chine, waspartof, ... \nvalue       :  205, SGP,  Singapore, SINGAPORE, Singapore,  Singapore,         NA,         NA,         NA,  Singapour,   Singapur,   ????????,   ????????,        ???,        NA, ... \n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\n\n\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\n\n\n\n\nchildcare_ppp &lt;- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 2290 points\nwindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  2290 points\nAverage intensity 2.875673e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n                    (33590 x 23700 units)\nWindow area = 796335000 square units\n\n\n\n\n\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 885\n\n#To Look at the Duplicate\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\n\n\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE\n\n\n\n\n\n\nsg_owin &lt;- as(sg_sp, \"owin\")\nplot(sg_owin)\n\n\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n34 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         82   1034550.0      1.48e-03\npolygon 2        104   1100540.0      1.58e-03\npolygon 3         67    732165.0      1.05e-03\npolygon 4        156   2364690.0      3.39e-03\npolygon 5         26     72188.5      1.04e-04\npolygon 6         16     35110.5      5.04e-05\npolygon 7        207   3885250.0      5.57e-03\npolygon 8         70    483000.0      6.93e-04\npolygon 9         23     71722.4      1.03e-04\npolygon 10        43    139236.0      2.00e-04\npolygon 11        21     35903.4      5.15e-05\npolygon 12       105    832107.0      1.19e-03\npolygon 13        19     63805.9      9.15e-05\npolygon 14        75    955310.0      1.37e-03\npolygon 15       132   2985250.0      4.28e-03\npolygon 16       192   4796520.0      6.88e-03\npolygon 17        77   1430070.0      2.05e-03\npolygon 18        21     47547.0      6.82e-05\npolygon 19       473  26400400.0      3.79e-02\npolygon 20       320   4789260.0      6.87e-03\npolygon 21        37    239043.0      3.43e-04\npolygon 22        18     34466.7      4.94e-05\npolygon 23        13     20190.5      2.90e-05\npolygon 24        34    126330.0      1.81e-04\npolygon 25        96    573783.0      8.23e-04\npolygon 26        62    920917.0      1.32e-03\npolygon 27        76   1087280.0      1.56e-03\npolygon 28        36     38729.5      5.56e-05\npolygon 29       261  10256000.0      1.47e-02\npolygon 30       106   1949160.0      2.80e-03\npolygon 31       537  24890800.0      3.57e-02\npolygon 32        16     19671.9      2.82e-05\npolygon 33        38    414592.0      5.95e-04\npolygon 34      4033 604202000.0      8.67e-01\nenclosing rectangle: [3040.59, 56097.76] x [16599.19, 50324.13] units\n                     (53060 x 33720 units)\nWindow area = 697027000 square units\nFraction of frame area: 0.39\n\n\n\n\n\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  2289 points\nAverage intensity 3.283947e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n34 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         82   1034550.0      1.48e-03\npolygon 2        104   1100540.0      1.58e-03\npolygon 3         67    732165.0      1.05e-03\npolygon 4        156   2364690.0      3.39e-03\npolygon 5         26     72188.5      1.04e-04\npolygon 6         16     35110.5      5.04e-05\npolygon 7        207   3885250.0      5.57e-03\npolygon 8         70    483000.0      6.93e-04\npolygon 9         23     71722.4      1.03e-04\npolygon 10        43    139236.0      2.00e-04\npolygon 11        21     35903.4      5.15e-05\npolygon 12       105    832107.0      1.19e-03\npolygon 13        19     63805.9      9.15e-05\npolygon 14        75    955310.0      1.37e-03\npolygon 15       132   2985250.0      4.28e-03\npolygon 16       192   4796520.0      6.88e-03\npolygon 17        77   1430070.0      2.05e-03\npolygon 18        21     47547.0      6.82e-05\npolygon 19       473  26400400.0      3.79e-02\npolygon 20       320   4789260.0      6.87e-03\npolygon 21        37    239043.0      3.43e-04\npolygon 22        18     34466.7      4.94e-05\npolygon 23        13     20190.5      2.90e-05\npolygon 24        34    126330.0      1.81e-04\npolygon 25        96    573783.0      8.23e-04\npolygon 26        62    920917.0      1.32e-03\npolygon 27        76   1087280.0      1.56e-03\npolygon 28        36     38729.5      5.56e-05\npolygon 29       261  10256000.0      1.47e-02\npolygon 30       106   1949160.0      2.80e-03\npolygon 31       537  24890800.0      3.57e-02\npolygon 32        16     19671.9      2.82e-05\npolygon 33        38    414592.0      5.95e-04\npolygon 34      4033 604202000.0      8.67e-01\nenclosing rectangle: [3040.59, 56097.76] x [16599.19, 50324.13] units\n                     (53060 x 33720 units)\nWindow area = 697027000 square units\nFraction of frame area: 0.39\n\nplot(childcareSG_ppp)\n\n\n\n\n\n\n\n\n\n\n\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n\n\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.html#install-necessary-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04.html#install-necessary-packages",
    "title": "2nd Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Show Code\npacman::p_load(sf,spatstat, raster, maptools, tmap)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex04.html#importing-data",
    "title": "2nd Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "# Childcare Data\nchildcare_sf &lt;- st_read(\"../data/geospatial/CHILDCARE.geojson\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `CHILDCARE' from data source \n  `C:\\dljyuan\\IS415-GAA\\data\\geospatial\\CHILDCARE.geojson' using driver `GeoJSON'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n# National Boundary Coastal Outline\nsg_sf &lt;- st_read(dsn = \"../data/geospatial/\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\dljyuan\\IS415-GAA\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 67 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6091 ymin: 1.16639 xmax: 104.0858 ymax: 1.471388\nGeodetic CRS:  WGS 84\n\n# MasterPlan Subzone\nmpsz_sf &lt;- st_read(dsn = \"../data/geospatial/\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\dljyuan\\IS415-GAA\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\n\nst_geometry(childcare_sf)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\nst_geometry(sg_sf)\n\nGeometry set for 1 feature \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6091 ymin: 1.16639 xmax: 104.0858 ymax: 1.471388\nGeodetic CRS:  WGS 84\n\nst_geometry(mpsz_sf)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\n\nst_crs(childcare_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(sg_sf)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]],\n        ID[\"EPSG\",6326]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433],\n        ID[\"EPSG\",8901]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic longitude\",east,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic latitude\",north,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]]]\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nsg_sf &lt;- st_transform(sg_sf, 3414)\nmpsz_sf &lt;- st_transform(mpsz_sf, 3414)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.html#mapping-spatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex04.html#mapping-spatial-data",
    "title": "2nd Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "tmap_mode('plot')\ntm_shape(mpsz_sf) +\n  tm_polygons() +\n  tm_shape(childcare_sf) +\n  tm_dots()\n\n\n\n\n\n\n\n\n\ntmap_mode('view')\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz_sf) +\n  tm_polygons() +\n  tm_shape(childcare_sf) +\n  tm_dots()\n\n\n\n\ntmap_mode('plot')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.html#geospatial-data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex04.html#geospatial-data-wrangling",
    "title": "2nd Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "childcare &lt;- as_Spatial(childcare_sf)\nsg &lt;- as_Spatial(sg_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\n\n\nsummary(childcare)\n\nObject of class SpatialPointsDataFrame\nCoordinates:\n               min      max\ncoords.x1 11810.03 45404.24\ncoords.x2 25596.33 49300.88\ncoords.x3     0.00     0.00\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nNumber of points: 2290\nData attributes:\n     Name           Description       \n Length:2290        Length:2290       \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n\nsummary(sg)\n\nObject of class SpatialPolygonsDataFrame\nCoordinates:\n        min      max\nx  3040.593 56097.76\ny 16599.186 50324.13\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nData attributes:\n      id_0         iso             name_engli          name_iso        \n Min.   :205   Length:1           Length:1           Length:1          \n 1st Qu.:205   Class :character   Class :character   Class :character  \n Median :205   Mode  :character   Mode  :character   Mode  :character  \n Mean   :205                                                           \n 3rd Qu.:205                                                           \n Max.   :205                                                           \n   name_fao          name_local         name_obsol         name_varia       \n Length:1           Length:1           Length:1           Length:1          \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n  name_nonla         name_frenc         name_spani         name_russi       \n Length:1           Length:1           Length:1           Length:1          \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n  name_arabi         name_chine         waspartof           contains        \n Length:1           Length:1           Length:1           Length:1          \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n  sovereign             iso2               www                fips          \n Length:1           Length:1           Length:1           Length:1          \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n      ison       validfr            validto             pop2000       \n Min.   :702   Length:1           Length:1           Min.   :4018114  \n 1st Qu.:702   Class :character   Class :character   1st Qu.:4018114  \n Median :702   Mode  :character   Mode  :character   Median :4018114  \n Mean   :702                                         Mean   :4018114  \n 3rd Qu.:702                                         3rd Qu.:4018114  \n Max.   :702                                         Max.   :4018114  \n      sqkm        popsqkm      unregion1          unregion2        \n Min.   :526   Min.   :7638   Length:1           Length:1          \n 1st Qu.:526   1st Qu.:7638   Class :character   Class :character  \n Median :526   Median :7638   Mode  :character   Mode  :character  \n Mean   :526   Mean   :7638                                        \n 3rd Qu.:526   3rd Qu.:7638                                        \n Max.   :526   Max.   :7638                                        \n   developing      cis      transition      oecd     wbregion        \n Min.   :1    Min.   :0   Min.   :0    Min.   :0   Length:1          \n 1st Qu.:1    1st Qu.:0   1st Qu.:0    1st Qu.:0   Class :character  \n Median :1    Median :0   Median :0    Median :0   Mode  :character  \n Mean   :1    Mean   :0   Mean   :0    Mean   :0                     \n 3rd Qu.:1    3rd Qu.:0   3rd Qu.:0    3rd Qu.:0                     \n Max.   :1    Max.   :0   Max.   :0    Max.   :0                     \n   wbincome            wbdebt            wbother              ceeac  \n Length:1           Length:1           Length:1           Min.   :0  \n Class :character   Class :character   Class :character   1st Qu.:0  \n Mode  :character   Mode  :character   Mode  :character   Median :0  \n                                                          Mean   :0  \n                                                          3rd Qu.:0  \n                                                          Max.   :0  \n     cemac       ceplg       comesa       eac        ecowas       igad  \n Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :0  \n 1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0  \n Median :0   Median :0   Median :0   Median :0   Median :0   Median :0  \n Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :0  \n 3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0  \n Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :0  \n      ioc         mru         sacu       uemoa        uma        palop  \n Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :0  \n 1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0  \n Median :0   Median :0   Median :0   Median :0   Median :0   Median :0  \n Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :0  \n 3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0  \n Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :0  \n     parta        cacm      eurasec      agadir      saarc       asean  \n Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :1  \n 1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:1  \n Median :0   Median :0   Median :0   Median :0   Median :0   Median :1  \n Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :1  \n 3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:1  \n Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :1  \n     nafta        gcc         csn       caricom        eu         can   \n Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :0   Min.   :0  \n 1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0   1st Qu.:0  \n Median :0   Median :0   Median :0   Median :0   Median :0   Median :0  \n Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :0   Mean   :0  \n 3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0   3rd Qu.:0  \n Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :0   Max.   :0  \n      acp      landlocked     aosis        sids      islands       ldc   \n Min.   :0   Min.   :0    Min.   :1   Min.   :1   Min.   :1   Min.   :0  \n 1st Qu.:0   1st Qu.:0    1st Qu.:1   1st Qu.:1   1st Qu.:1   1st Qu.:0  \n Median :0   Median :0    Median :1   Median :1   Median :1   Median :0  \n Mean   :0   Mean   :0    Mean   :1   Mean   :1   Mean   :1   Mean   :0  \n 3rd Qu.:0   3rd Qu.:0    3rd Qu.:1   3rd Qu.:1   3rd Qu.:1   3rd Qu.:0  \n Max.   :0   Max.   :0    Max.   :1   Max.   :1   Max.   :1   Max.   :0  \n\nsummary(mpsz)\n\nObject of class SpatialPolygonsDataFrame\nCoordinates:\n        min      max\nx  2667.538 56396.44\ny 15748.721 50256.33\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nData attributes:\n    OBJECTID       SUBZONE_NO      SUBZONE_N          SUBZONE_C        \n Min.   :  1.0   Min.   : 1.000   Length:323         Length:323        \n 1st Qu.: 81.5   1st Qu.: 2.000   Class :character   Class :character  \n Median :162.0   Median : 4.000   Mode  :character   Mode  :character  \n Mean   :162.0   Mean   : 4.625                                        \n 3rd Qu.:242.5   3rd Qu.: 6.500                                        \n Max.   :323.0   Max.   :17.000                                        \n    CA_IND           PLN_AREA_N         PLN_AREA_C          REGION_N        \n Length:323         Length:323         Length:323         Length:323        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   REGION_C           INC_CRC            FMEL_UPD_D             X_ADDR     \n Length:323         Length:323         Min.   :2014-12-05   Min.   : 5093  \n Class :character   Class :character   1st Qu.:2014-12-05   1st Qu.:21864  \n Mode  :character   Mode  :character   Median :2014-12-05   Median :28465  \n                                       Mean   :2014-12-05   Mean   :27257  \n                                       3rd Qu.:2014-12-05   3rd Qu.:31674  \n                                       Max.   :2014-12-05   Max.   :50425  \n     Y_ADDR        SHAPE_Leng        SHAPE_Area      \n Min.   :19579   Min.   :  871.5   Min.   :   39438  \n 1st Qu.:31776   1st Qu.: 3709.6   1st Qu.:  628261  \n Median :35113   Median : 5211.9   Median : 1229894  \n Mean   :36106   Mean   : 6524.4   Mean   : 2420882  \n 3rd Qu.:39869   3rd Qu.: 6942.6   3rd Qu.: 2106483  \n Max.   :49553   Max.   :68083.9   Max.   :69748299  \n\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 2290 \nextent      : 11810.03, 45404.24, 25596.33, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Name,                                                                                                                                                                                                                                                                                                                                                                       Description \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;CENTRE_NAME&lt;/th&gt; &lt;td&gt;3-IN-1 FAMILY CENTRE&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CENTRE_CODE&lt;/th&gt; &lt;td&gt;ST0027&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;DF7EC9C2478FA5A5&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093631&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,   &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;CENTRE_NAME&lt;/th&gt; &lt;td&gt;Zulfa Kindergarten&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CENTRE_CODE&lt;/th&gt; &lt;td&gt;PT9603&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;527C1231DDD0FA64&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093632&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 1 \nextent      : 3040.593, 56097.76, 16599.19, 50324.13  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 67\nnames       : id_0, iso, name_engli,  name_iso,  name_fao, name_local, name_obsol, name_varia, name_nonla, name_frenc, name_spani, name_russi, name_arabi, name_chine, waspartof, ... \nvalue       :  205, SGP,  Singapore, SINGAPORE, Singapore,  Singapore,         NA,         NA,         NA,  Singapour,   Singapur,   ????????,   ????????,        ???,        NA, ... \n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\n\n\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\n\n\n\n\nchildcare_ppp &lt;- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 2290 points\nwindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  2290 points\nAverage intensity 2.875673e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n                    (33590 x 23700 units)\nWindow area = 796335000 square units\n\n\n\n\n\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 885\n\n#To Look at the Duplicate\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\n\n\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE\n\n\n\n\n\n\nsg_owin &lt;- as(sg_sp, \"owin\")\nplot(sg_owin)\n\n\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n34 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         82   1034550.0      1.48e-03\npolygon 2        104   1100540.0      1.58e-03\npolygon 3         67    732165.0      1.05e-03\npolygon 4        156   2364690.0      3.39e-03\npolygon 5         26     72188.5      1.04e-04\npolygon 6         16     35110.5      5.04e-05\npolygon 7        207   3885250.0      5.57e-03\npolygon 8         70    483000.0      6.93e-04\npolygon 9         23     71722.4      1.03e-04\npolygon 10        43    139236.0      2.00e-04\npolygon 11        21     35903.4      5.15e-05\npolygon 12       105    832107.0      1.19e-03\npolygon 13        19     63805.9      9.15e-05\npolygon 14        75    955310.0      1.37e-03\npolygon 15       132   2985250.0      4.28e-03\npolygon 16       192   4796520.0      6.88e-03\npolygon 17        77   1430070.0      2.05e-03\npolygon 18        21     47547.0      6.82e-05\npolygon 19       473  26400400.0      3.79e-02\npolygon 20       320   4789260.0      6.87e-03\npolygon 21        37    239043.0      3.43e-04\npolygon 22        18     34466.7      4.94e-05\npolygon 23        13     20190.5      2.90e-05\npolygon 24        34    126330.0      1.81e-04\npolygon 25        96    573783.0      8.23e-04\npolygon 26        62    920917.0      1.32e-03\npolygon 27        76   1087280.0      1.56e-03\npolygon 28        36     38729.5      5.56e-05\npolygon 29       261  10256000.0      1.47e-02\npolygon 30       106   1949160.0      2.80e-03\npolygon 31       537  24890800.0      3.57e-02\npolygon 32        16     19671.9      2.82e-05\npolygon 33        38    414592.0      5.95e-04\npolygon 34      4033 604202000.0      8.67e-01\nenclosing rectangle: [3040.59, 56097.76] x [16599.19, 50324.13] units\n                     (53060 x 33720 units)\nWindow area = 697027000 square units\nFraction of frame area: 0.39\n\n\n\n\n\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  2289 points\nAverage intensity 3.283947e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n34 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         82   1034550.0      1.48e-03\npolygon 2        104   1100540.0      1.58e-03\npolygon 3         67    732165.0      1.05e-03\npolygon 4        156   2364690.0      3.39e-03\npolygon 5         26     72188.5      1.04e-04\npolygon 6         16     35110.5      5.04e-05\npolygon 7        207   3885250.0      5.57e-03\npolygon 8         70    483000.0      6.93e-04\npolygon 9         23     71722.4      1.03e-04\npolygon 10        43    139236.0      2.00e-04\npolygon 11        21     35903.4      5.15e-05\npolygon 12       105    832107.0      1.19e-03\npolygon 13        19     63805.9      9.15e-05\npolygon 14        75    955310.0      1.37e-03\npolygon 15       132   2985250.0      4.28e-03\npolygon 16       192   4796520.0      6.88e-03\npolygon 17        77   1430070.0      2.05e-03\npolygon 18        21     47547.0      6.82e-05\npolygon 19       473  26400400.0      3.79e-02\npolygon 20       320   4789260.0      6.87e-03\npolygon 21        37    239043.0      3.43e-04\npolygon 22        18     34466.7      4.94e-05\npolygon 23        13     20190.5      2.90e-05\npolygon 24        34    126330.0      1.81e-04\npolygon 25        96    573783.0      8.23e-04\npolygon 26        62    920917.0      1.32e-03\npolygon 27        76   1087280.0      1.56e-03\npolygon 28        36     38729.5      5.56e-05\npolygon 29       261  10256000.0      1.47e-02\npolygon 30       106   1949160.0      2.80e-03\npolygon 31       537  24890800.0      3.57e-02\npolygon 32        16     19671.9      2.82e-05\npolygon 33        38    414592.0      5.95e-04\npolygon 34      4033 604202000.0      8.67e-01\nenclosing rectangle: [3040.59, 56097.76] x [16599.19, 50324.13] units\n                     (53060 x 33720 units)\nWindow area = 697027000 square units\nFraction of frame area: 0.39\n\nplot(childcareSG_ppp)\n\n\n\n\n\n\n\n\n\n\n\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n\n\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.html#g-function",
    "href": "Hands-on_Ex/Hands-on_Ex04.html#g-function",
    "title": "2nd Order Spatial Point Patterns Analysis Methods",
    "section": "G-Function",
    "text": "G-Function\nCompute G-function using Gest() [CCK]\n\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nMonte Carlo test with G-fucntion\n\n\n\nG_CK.csr &lt;- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\n\nplot(G_CK.csr)\n\n\n\n\n\n\n\n\nG-function [Tampines]\n\nG_tm = Gest(childcare_tm_ppp, correction = \"best\")\nplot(G_tm)\n\n\n\n\n\n\n\nG_tm.csr &lt;- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(G_tm.csr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.html#f-function",
    "href": "Hands-on_Ex/Hands-on_Ex04.html#f-function",
    "title": "2nd Order Spatial Point Patterns Analysis Methods",
    "section": "F-Function",
    "text": "F-Function\nCompute F-function using Fest() [CCK] ::: callout-note The hypothesis and test are as follows:\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001. :::\n\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\n\n\n\nF_CK.csr &lt;- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(F_CK.csr)\n\n\n\n\n\n\n\n\nF-function [Tampines]\n\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\n\n\n\nF_tm.csr &lt;- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(F_tm.csr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.html#k-function",
    "href": "Hands-on_Ex/Hands-on_Ex04.html#k-function",
    "title": "2nd Order Spatial Point Patterns Analysis Methods",
    "section": "K-Function",
    "text": "K-Function\nCompute K-function using Kest() [CCK]\n\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\nK_ck.csr &lt;- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\n\nK-function [Tampines]\n\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r,\n     ylab= \"K(d)-r\", xlab = \"d(m)\",\n     xlim=c(0,1000))\n\n\n\n\n\n\n\nK_tm.csr &lt;- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(K_tm.csr, . - r ~ r,\n     xlab=\"d\", ylab=\"K(d)-r\",\n     xlim=c(0,500))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.html#l-function",
    "href": "Hands-on_Ex/Hands-on_Ex04.html#l-function",
    "title": "2nd Order Spatial Point Patterns Analysis Methods",
    "section": "L-Function",
    "text": "L-Function\nCompute L-function using Lest() [CCK]\n\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\nL_ck.csr &lt;- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\n\nL-function [Tampines]\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\",\n     xlim=c(0,1000))\n\n\n\n\n\n\n\nL_tm.csr &lt;- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(L_tm.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\",\n     xlim=c(0,500))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2: Thematic Mapping and GeoVisualisation with R",
    "section": "",
    "text": "Using tmap package to create choropleth map\nPreloading neccesary packages\n\npacman::p_load(sf, tmap, tidyverse)\n\nImporting Geospatial Data for Choropleth Map Practice\n\nmpsz &lt;- st_read(dsn = \"/dljyuan/IS415-GAA/data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\dljyuan\\IS415-GAA\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nExamination of Data Content\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\nImporting Attributes Data into R Import data file into RStudio and save the file into an R dataframe called popdata.\n\npopdata &lt;- read_csv(\"/dljyuan/IS415-GAA/data/aspatial/respopagesextod2011to2020.csv\")\n\n\n\nWrangling and Transformation of Data\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\nConverting the values in PA and SZ fields Required to convert the values in PA and SZ fields to uppercase as SUBZONE_N and PLN_AREA_N are in uppercase.\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nJoin the geographical data and attribute table using planning subzone name e.g. SUBZONE_N and SZ as the common identifier\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\nwrite_rds(mpsz_pop2020, \"/dljyuan/IS415-GAA/data/rds/mpszpop2020.rds\")\n\n\n\n\nPlotting a choropleth map quickly by using qtm()\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\nCreating a choropleth map by using tmap’s elements\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\n\nBase Map\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\nChoropleth map using tm_polygons()\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\nChoropleth map using tm_fill()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\nChoropleth map using tm_fill() & tm_border()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\n\n\n\n\n\n\n\nPlotting choropleth maps with built-in classification methods\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_layout(main.title = \"Style: Jenks\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n    tm_layout(main.title = \"Style: Equal\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nPlotting choropleth map with custome break\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\nUsing ColourBrewer palette\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nReverse colour shading\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n\n\n\n\nMap furniture such as compass, scale bar and grid lines [tm_compass(), tm_scale_bar() and tm_grid()]\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\nResetting default style\n\ntmap_style(\"white\")\n\n\n\n\nAssigning multiple values to at least one of the aesthetic arguments Choropleth maps are created by defining ncols in tm_fill()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\n\nSmall multiple choropleth maps are created by assigning multiple values to at least one of the aesthetic arguments\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\nBy defining a group-by variable in tm_facets()\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nBy creating multiple stand-alone maps with tmap_arrange()\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#data-preparation",
    "title": "Hands-on Exercise 2: Thematic Mapping and GeoVisualisation with R",
    "section": "",
    "text": "Wrangling and Transformation of Data\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\nConverting the values in PA and SZ fields Required to convert the values in PA and SZ fields to uppercase as SUBZONE_N and PLN_AREA_N are in uppercase.\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nJoin the geographical data and attribute table using planning subzone name e.g. SUBZONE_N and SZ as the common identifier\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\nwrite_rds(mpsz_pop2020, \"/dljyuan/IS415-GAA/data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#choropleth-mapping-geospatial-data-using-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#choropleth-mapping-geospatial-data-using-tmap",
    "title": "Hands-on Exercise 2: Thematic Mapping and GeoVisualisation with R",
    "section": "",
    "text": "Plotting a choropleth map quickly by using qtm()\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\nCreating a choropleth map by using tmap’s elements\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#drawing-maps-with-different-layer-elements",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#drawing-maps-with-different-layer-elements",
    "title": "Hands-on Exercise 2: Thematic Mapping and GeoVisualisation with R",
    "section": "",
    "text": "Base Map\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\nChoropleth map using tm_polygons()\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\nChoropleth map using tm_fill()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\nChoropleth map using tm_fill() & tm_border()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#data-classification-methods-of-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#data-classification-methods-of-tmap",
    "title": "Hands-on Exercise 2: Thematic Mapping and GeoVisualisation with R",
    "section": "",
    "text": "Plotting choropleth maps with built-in classification methods\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_layout(main.title = \"Style: Jenks\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n    tm_layout(main.title = \"Style: Equal\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nPlotting choropleth map with custome break\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#colour-scheme",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#colour-scheme",
    "title": "Hands-on Exercise 2: Thematic Mapping and GeoVisualisation with R",
    "section": "",
    "text": "Using ColourBrewer palette\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nReverse colour shading\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#map-legend",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#map-legend",
    "title": "Hands-on Exercise 2: Thematic Mapping and GeoVisualisation with R",
    "section": "",
    "text": "tm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#map-style",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#map-style",
    "title": "Hands-on Exercise 2: Thematic Mapping and GeoVisualisation with R",
    "section": "",
    "text": "tm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#cartographic-furniture",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#cartographic-furniture",
    "title": "Hands-on Exercise 2: Thematic Mapping and GeoVisualisation with R",
    "section": "",
    "text": "Map furniture such as compass, scale bar and grid lines [tm_compass(), tm_scale_bar() and tm_grid()]\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\nResetting default style\n\ntmap_style(\"white\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#drawing-small-multiple-choropleth-maps",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#drawing-small-multiple-choropleth-maps",
    "title": "Hands-on Exercise 2: Thematic Mapping and GeoVisualisation with R",
    "section": "",
    "text": "Assigning multiple values to at least one of the aesthetic arguments Choropleth maps are created by defining ncols in tm_fill()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\n\nSmall multiple choropleth maps are created by assigning multiple values to at least one of the aesthetic arguments\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\nBy defining a group-by variable in tm_facets()\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nBy creating multiple stand-alone maps with tmap_arrange()\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#mappping-spatial-object-meeting-a-selection-criterion",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#mappping-spatial-object-meeting-a-selection-criterion",
    "title": "Hands-on Exercise 2: Thematic Mapping and GeoVisualisation with R",
    "section": "",
    "text": "tm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "",
    "text": "In this section, I will install and load tidyverse and sf packages.\n\npacman::p_load(tidyverse, sf)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#installing-and-loading-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#installing-and-loading-r-packages",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "",
    "text": "In this section, I will install and load tidyverse and sf packages.\n\npacman::p_load(tidyverse, sf)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#plotting-the-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#plotting-the-geospatial-data",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "Plotting the Geospatial Data",
    "text": "Plotting the Geospatial Data\nHide Plot Show Code Only\n\nplot(mpsz)\n\nHide Code Show Plot Only\n\n\n\n\n\n\n\n\n\nOthers\n\nplot(st_geometry(mpsz))\n\n\n\n\n\n\n\n\n\nplot(mpsz[\"PLN_AREA_N\"])"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03.html",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "This hands-on exercise delves deeper into the intricacies of 1st Order Spatial Point Patterns Analysis Methods\n\n\n\n\nShow Code\npacman::p_load(maptools, sf, raster, spatstat, tmap)\n\n\n\n\n\nA point feature data providing both location and attribute information of childcare centres\n\nchildcare_sf &lt;- st_read(\"../data/geospatial/CHILDCARE.geojson\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `CHILDCARE' from data source \n  `C:\\dljyuan\\IS415-GAA\\data\\geospatial\\CHILDCARE.geojson' using driver `GeoJSON'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nA multipolygon feature data providing information of URA 2019 Master Plan Planning Subzone boundary data.\n\nsg_sf &lt;- st_read(dsn = \"../data/geospatial/\", \n                layer = \"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\dljyuan\\IS415-GAA\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 67 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6091 ymin: 1.16639 xmax: 104.0858 ymax: 1.471388\nGeodetic CRS:  WGS 84\n\n\nA polygon feature data providing information of URA 2014 Master Plan Planning Subzone boundary data.\n\nmpsz_sf &lt;- st_read(dsn = \"../data/geospatial/\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\dljyuan\\IS415-GAA\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nConverting CRS from WGS84 to SVY21\n\nmpsz_sf &lt;- st_transform(mpsz_sf, 3414)\nst_geometry(mpsz_sf)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\nsg_sf &lt;- st_transform(sg_sf, 3414)\nst_geometry(sg_sf)\n\nGeometry set for 1 feature \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 3040.593 ymin: 16599.19 xmax: 56097.76 ymax: 50324.13\nProjected CRS: SVY21 / Singapore TM\n\nst_geometry(childcare_sf)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\n\n\n\n\nStatic Mapping\n\ntmap_mode(\"plot\")\ntm_shape(mpsz_sf) +\n  tm_polygons() +\n  tm_shape(childcare_sf) +\n  tm_dots()\n\n\n\n\n\n\n\n\nInteractive Mode\n\ntmap_mode('view')\ntm_shape(childcare_sf)+\n  tm_dots()\n\n\n\n\n\n\ntmap_mode('plot')\n\n\n\n\nConverting Geospatial data to Simple feature data frame\n\nchildcare &lt;- as_Spatial(childcare_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\nsg &lt;- as_Spatial(sg_sf)\n\nConvert to Generic SP Object\n\n\n\n\n\n\nNote\n\n\n\nAs spatstat requires the analytical data in ppp object form. There is no direct way to convert a Spatial classes into ppp object. We need to convert the Spatial classes into Spatial object first.\n\n\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\nNow, we will use as.ppp() function of spatstat to convert the spatial data into spatstat’s ppp object format.\n\nchildcare_ppp &lt;- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 2290 points\nwindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  2290 points\nAverage intensity 2.875673e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n                    (33590 x 23700 units)\nWindow area = 796335000 square units\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn spatial point patterns analysis an issue of significant is the presence of duplicates. The statistical methodology used for spatial point patterns processes is based largely on the assumption that process are simple, that is, that the points cannot be coincident.\n\n\nCheck for Duplicate\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\nTo show all of the co-indicence points\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    3    4    1    7    7    1    1    1    2    1    1    1    1    2 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    4    1    1    1    1    1    5    1    2    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    2    2    1    1    1    1    1    2    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   5    1    1    2    1    1    1    1    1    1    1    2    1    1    1    4 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1   10    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    4    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1   10 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n  10   10    1    1    1    1    1    1    1    1    1    1    1    1    3    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    1    2    1   10    1    1    1    1    1    1    2    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    3    1    1    1    1    1    3    1    1    1    1    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    2    1    1    3    1    1    1    2    1    2    2    2    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    1    1    2    1    1    1    1    1    2    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    2    1    1    1    1    1    1    3    1    1    1    4    1    1    1 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    4    1    1    1    1    1    1    1    1    1    1    2    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    3    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    1    1    1    1    1    1    1    2    7    1    3    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   2    1    1    1    1    1    1    1    3    2    1    1    1    1    1    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    2    1    1    2    1    1    1    2    1    1    1    2    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    1    1    1    1    1    2    3    2    1    2    1    1    1    1    5 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    3    1    1    1    1    1    1    5    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    4    1    1    1    1    1    1    1    1    3    1    1    2 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    2    1    1    1    1    1    1    3    1    1    1    1    1    1    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    2    1    1    1    1    1    2    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    2    2    1    1    1    1    1   10    1 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   2    1    1    1    2    1    3    1    1    1    1    1    1    1    1    2 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   2    1    1    3    1    1    1    1    1    1    3    1    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    3    1    1    1    3    1    3    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    2    2    2    1    1    2    3    1 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    2    1    1    1    1    3    1    1    3    1    1    1    1    2 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    2    1    2    1   10    1    4    2    2    1    1    1    1    4    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    3    1    1    1    1    4    1    2    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    3    1    1    1    1    1    2    1    1    1    2    2    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    4    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   2    1    1    1    1    1    1    1    1    1    1    1   10    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    3    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    3    3    3    3    1    1    1    1    1    1    1    3    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   3    1    1    1    1    1    1    1    1    3    1    3    1    1    1    3 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   2    2    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   2    1    1    1    3    1    1    1    1    2    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    4    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    3    1    3    3    3    3    1    1    1    1    3    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    3    1    2    1    1    1    1    1    3    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   3    1    3    1    3    1    1    1    1    1    1    1    1    1    2    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    2    3    1    1    1    1    1   10    1    2    4    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    4    1    7    1    1    1    1    3    1    1    1    1    1    3 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   3    1    1    1    1    3    1    1    1    3    1    3    1    1    1    3 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   3    1    1    1    1    2    1    1    1    1    3    1    1    3    1    2 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    3    3    1    1    3    1    2    1    3    1    3    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    3    1    1    1    1    3    1    1    1    1    3    1    3 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    1    1    3    1    1    3    1    1    1    1    2    1    1    1    3 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    3    1    1    1    1    1    1    3    3    3    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   1    1    1    2    1    1    3    1    1    1    1    1    1    1    3    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   3    3    3    3    3    1    1    1    3    1    4    3    1    3    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   3    4    3    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    4    1    1    1 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    3    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    3    1    1    1    1    1    1    1   10    1    1    1    1    1    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    3    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    2    2    3    1    1    1    7    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    1    1    1    1    1    2    1    1    1    1    4    2    3    2    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    2    2    1    1    1    1    2    2    3    1    1    1    1    1    2 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    3    3    2    2    2    2    2    2    2    2    2    3    3    3 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   2    2    3    2    3    2    3    2    2    2    2    2    2    2    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    2    1    1    1    1    1    1    3    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    1    2    1    1    1    1    5    1    1    1    1 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 \n   3    1    1    2    1    1    1    2    1    1    1    1    1    1    1    1 \n1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 \n   1    1    7    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1569 1570 1571 1572 1573 1574 1575 1576 1577 1578 1579 1580 1581 1582 1583 1584 \n   3    1    1    5    1    3    2    3    3    3    3    2    2    4    3    2 \n1585 1586 1587 1588 1589 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 \n   2    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1601 1602 1603 1604 1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 \n   1    1    1    1    1    5    1    1    3    1    1    1    1    1    1    1 \n1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    2 \n1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 \n   2    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 \n   2    2    2    3    2    2    2    2    2    2    2    4    2    2    2    2 \n1681 1682 1683 1684 1685 1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 \n   2    4    3    2    2    2    2    3    2    2    2    2    2    2    2    2 \n1697 1698 1699 1700 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 \n   2    2    4    2    2    2    2    2    2    2    1    2    2    2    2    2 \n1713 1714 1715 1716 1717 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 \n   3    2    2    2    2    2    2    2    2    2    3    2    2    2    2    2 \n1729 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 \n   2    2    2    2    2    2    2    5    2    2    2    7    2    2    2    2 \n1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 \n   2    2    2    2    2    2    7    2    4    2    2    2    2    2    2    2 \n1761 1762 1763 1764 1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 \n   2    2    2    2    2    2    2    2    3    2    2    2    2    2    1    2 \n1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 \n   2    2    2    3    2    2    2    2    3    2    2    2    2    3    2    2 \n1793 1794 1795 1796 1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 \n   2    2    2    2    3    2    2    3    3    3    3    3    2    3    2    3 \n1809 1810 1811 1812 1813 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 \n   3    3    3    2    2    3    3    2    3    3    2    2    2    2    2    3 \n1825 1826 1827 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 \n   2    3    3    3    3    2    2    2    2    2    3    2    2    2    3    2 \n1841 1842 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 \n   3    3    2    2    2    2    3    3    3    3    3    3    3    2    2    3 \n1857 1858 1859 1860 1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872 \n   2    2    2    2    3    3    3    3    2    2    3    3    2    2    3    2 \n1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 \n   3    3    2    2    3    3    2    2    3    4    3    3    2    3    2    2 \n1889 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 \n   3    2    2    2    2    3    2    2    2    7    2    1    2    7    2    2 \n1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 \n   4    2    2    2    2    2    2    2    2    2    2    2    2    2    2    2 \n1921 1922 1923 1924 1925 1926 1927 1928 1929 1930 1931 1932 1933 1934 1935 1936 \n   2    2    2    2    2    2    2    2    2    2    2    2    2    2    2    2 \n1937 1938 1939 1940 1941 1942 1943 1944 1945 1946 1947 1948 1949 1950 1951 1952 \n   2    2    2    2    2    2    5    2    2    2    2    2    4    1    1    1 \n1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 1963 1964 1965 1966 1967 1968 \n   1    1    1    1    1    1    1    1    1    3    3    3    3    1    3    1 \n1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 1979 1980 1981 1982 1983 1984 \n   3    3    3    3    3    3    3    3    3    3    3    3    3    1    3    3 \n1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 \n   3    3    3    3    3    3    3    3    3    3    3    1    1    3    3    3 \n2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 \n   2    3    3    3    3    3    4    3    2    3    3    3    3    3    3    3 \n2017 2018 2019 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 \n   3    3    3    3    3    3    3    3    2    3    3    3    2    2    2    2 \n2033 2034 2035 2036 2037 2038 2039 2040 2041 2042 2043 2044 2045 2046 2047 2048 \n   3    2    2    2    2    2    2    2    4    2    2    2    2    1    2    2 \n2049 2050 2051 2052 2053 2054 2055 2056 2057 2058 2059 2060 2061 2062 2063 2064 \n   2    2    2    2    2    3    2    3    2    2    2    3    3    2    2    2 \n2065 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077 2078 2079 2080 \n   3    2    3    2    2    2    2    2    2    3    2    2    3    2    2    2 \n2081 2082 2083 2084 2085 2086 2087 2088 2089 2090 2091 2092 2093 2094 2095 2096 \n   2    2    2    2    2    2    2    2    2    2    2    2    2    2    2    2 \n2097 2098 2099 2100 2101 2102 2103 2104 2105 2106 2107 2108 2109 2110 2111 2112 \n   2    2    3    2    2    2    2    2    2    2    2    2    3    2    2    2 \n2113 2114 2115 2116 2117 2118 2119 2120 2121 2122 2123 2124 2125 2126 2127 2128 \n   2    2    2    2    2    2    4    2    7    2    2    2    1    2    2    2 \n2129 2130 2131 2132 2133 2134 2135 2136 2137 2138 2139 2140 2141 2142 2143 2144 \n   2    1    2    2    2    2    2    7    2    4    2    2    2    2    2    2 \n2145 2146 2147 2148 2149 2150 2151 2152 2153 2154 2155 2156 2157 2158 2159 2160 \n   2    2    2    2    2    2    2    2    2    3    2    2    2    2    2    2 \n2161 2162 2163 2164 2165 2166 2167 2168 2169 2170 2171 2172 2173 2174 2175 2176 \n   1    2    2    2    2    3    2    2    3    1    2    2    2    2    2    2 \n2177 2178 2179 2180 2181 2182 2183 2184 2185 2186 2187 2188 2189 2190 2191 2192 \n   2    2    1    3    2    2    2    3    2    2    2    2    2    2    2    2 \n2193 2194 2195 2196 2197 2198 2199 2200 2201 2202 2203 2204 2205 2206 2207 2208 \n   2    2    2    2    2    2    2    2    2    2    2    2    2    2    2    2 \n2209 2210 2211 2212 2213 2214 2215 2216 2217 2218 2219 2220 2221 2222 2223 2224 \n   2    2    2    2    2    4    2    7    2    7    2    2    4    2    2    2 \n2225 2226 2227 2228 2229 2230 2231 2232 2233 2234 2235 2236 2237 2238 2239 2240 \n   2    2    3    2    2    2    2    2    2    2    2    2    2    4    2    2 \n2241 2242 2243 2244 2245 2246 2247 2248 2249 2250 2251 2252 2253 2254 2255 2256 \n   2    2    2    2    3    2    2    2    2    2    2    2    2    2    2    2 \n2257 2258 2259 2260 2261 2262 2263 2264 2265 2266 2267 2268 2269 2270 2271 2272 \n   2    2    2    2    2    4    2    2    2    2    2    2    2    2    2    4 \n2273 2274 2275 2276 2277 2278 2279 2280 2281 2282 2283 2284 2285 2286 2287 2288 \n   2    2    2    2    2    2    2    3    3    2    2    2    2    2    2    2 \n2289 2290 \n   2    2 \n\n\nTo count the number of co-indicence points\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 885\n\n\nTo view the location of duplicate points\n\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\ntmap_mode('plot')\n\n\n\n\n\n\n\nNote\n\n\n\n3 Ways To Overcome: 1) Delete duplicates - Mean that some useful point events will be lost 2) Use jittering - which will add a small perturbation to the duplicate points so that they do not occupy the exact same space 3) Take them into account as marks - Make each point “unique” and then attach the duplicates of the points to the patterns as marks, as attributes of the points\n\n\nJittering Approach\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\nCheck again for duplicates\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE\n\n\n\n\n\n\n\n\nNote\n\n\n\nWhen analysing spatial point patterns, it is a good practice to confine the analysis with a geographical area like Singapore boundary. In spatstat, an object called owin is specially designed to represent this polygonal region.\n\n\nCovert sg SpatialPolygon object into owin object of spatstat\n\nsg_owin &lt;- as(sg_sp, \"owin\")\nplot(sg_owin)\n\n\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n34 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         82   1034550.0      1.48e-03\npolygon 2        104   1100540.0      1.58e-03\npolygon 3         67    732165.0      1.05e-03\npolygon 4        156   2364690.0      3.39e-03\npolygon 5         26     72188.5      1.04e-04\npolygon 6         16     35110.5      5.04e-05\npolygon 7        207   3885250.0      5.57e-03\npolygon 8         70    483000.0      6.93e-04\npolygon 9         23     71722.4      1.03e-04\npolygon 10        43    139236.0      2.00e-04\npolygon 11        21     35903.4      5.15e-05\npolygon 12       105    832107.0      1.19e-03\npolygon 13        19     63805.9      9.15e-05\npolygon 14        75    955310.0      1.37e-03\npolygon 15       132   2985250.0      4.28e-03\npolygon 16       192   4796520.0      6.88e-03\npolygon 17        77   1430070.0      2.05e-03\npolygon 18        21     47547.0      6.82e-05\npolygon 19       473  26400400.0      3.79e-02\npolygon 20       320   4789260.0      6.87e-03\npolygon 21        37    239043.0      3.43e-04\npolygon 22        18     34466.7      4.94e-05\npolygon 23        13     20190.5      2.90e-05\npolygon 24        34    126330.0      1.81e-04\npolygon 25        96    573783.0      8.23e-04\npolygon 26        62    920917.0      1.32e-03\npolygon 27        76   1087280.0      1.56e-03\npolygon 28        36     38729.5      5.56e-05\npolygon 29       261  10256000.0      1.47e-02\npolygon 30       106   1949160.0      2.80e-03\npolygon 31       537  24890800.0      3.57e-02\npolygon 32        16     19671.9      2.82e-05\npolygon 33        38    414592.0      5.95e-04\npolygon 34      4033 604202000.0      8.67e-01\nenclosing rectangle: [3040.59, 56097.76] x [16599.19, 50324.13] units\n                     (53060 x 33720 units)\nWindow area = 697027000 square units\nFraction of frame area: 0.39\n\n\n\n\n\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\nplot(childcareSG_ppp)\n\n\n\n\n\n\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  2289 points\nAverage intensity 3.283947e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n34 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         82   1034550.0      1.48e-03\npolygon 2        104   1100540.0      1.58e-03\npolygon 3         67    732165.0      1.05e-03\npolygon 4        156   2364690.0      3.39e-03\npolygon 5         26     72188.5      1.04e-04\npolygon 6         16     35110.5      5.04e-05\npolygon 7        207   3885250.0      5.57e-03\npolygon 8         70    483000.0      6.93e-04\npolygon 9         23     71722.4      1.03e-04\npolygon 10        43    139236.0      2.00e-04\npolygon 11        21     35903.4      5.15e-05\npolygon 12       105    832107.0      1.19e-03\npolygon 13        19     63805.9      9.15e-05\npolygon 14        75    955310.0      1.37e-03\npolygon 15       132   2985250.0      4.28e-03\npolygon 16       192   4796520.0      6.88e-03\npolygon 17        77   1430070.0      2.05e-03\npolygon 18        21     47547.0      6.82e-05\npolygon 19       473  26400400.0      3.79e-02\npolygon 20       320   4789260.0      6.87e-03\npolygon 21        37    239043.0      3.43e-04\npolygon 22        18     34466.7      4.94e-05\npolygon 23        13     20190.5      2.90e-05\npolygon 24        34    126330.0      1.81e-04\npolygon 25        96    573783.0      8.23e-04\npolygon 26        62    920917.0      1.32e-03\npolygon 27        76   1087280.0      1.56e-03\npolygon 28        36     38729.5      5.56e-05\npolygon 29       261  10256000.0      1.47e-02\npolygon 30       106   1949160.0      2.80e-03\npolygon 31       537  24890800.0      3.57e-02\npolygon 32        16     19671.9      2.82e-05\npolygon 33        38    414592.0      5.95e-04\npolygon 34      4033 604202000.0      8.67e-01\nenclosing rectangle: [3040.59, 56097.76] x [16599.19, 50324.13] units\n                     (53060 x 33720 units)\nWindow area = 697027000 square units\nFraction of frame area: 0.39\n\n\n\n\n\n\n\nComputing kernel density estimation using automatic bandwidth selection method ::: callout-note Configuration of Density() - bw.diggle() automatic bandwidth selection method. Other recommended methods are bw.CvL(), bw.scott() or bw.ppl(). - The smoothing kernel used is gaussian, which is the default. Other smoothing methods are: “epanechnikov”, “quartic” or “disc”. - The intensity estimate is corrected for edge effect bias by using method described by Jones (1993) and Diggle (2010, equation 18.9). The default is FALSE. :::\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \n\n\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nRetrieve the bandwidth used to compute the kde layer\n\nbw &lt;- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n305.2404 \n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe density values of the output range from 0 to 0.000035 which is way too small to comprehend. This is because the default unit of measurement of svy21 is in meter. As a result, the density values computed is in “number of points per square meter”.\n\n\n\nchildcareSG_ppp.km &lt;- rescale(childcareSG_ppp, 1000, \"km\")\n\nRe-run density()\n\nkde_childcareSG.bw &lt;- density(childcareSG_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG.bw)\n\n\n\n\n\n\n\n\n\n\n\n\nbw.CvL(childcareSG_ppp.km)\n\n  sigma \n4.53932 \n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.112227 1.346566 \n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.2107976 \n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.3052404 \n\n\n\n\n\n\n\n\nNote\n\n\n\nBaddeley et. (2016) suggested the use of the bw.ppl() algorithm because in ther experience it tends to produce the more appropriate values when the pattern consists predominantly of tight clusters. But they also insist that if the purpose of once study is to detect a single tight cluster in the midst of random noise then the bw.diggle() method seems to work best.\n\n\nComparing bw.diggle & bw.ppl\n\nkde_childcareSG.ppl &lt;- density(childcareSG_ppp.km, \n                               sigma=bw.ppl, \n                               edge=TRUE,\n                               kernel=\"gaussian\")\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")\n\n\n\n\n\n\n\n\n\n\n\n\npar(mfrow=c(2,2))\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"Gaussian\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNext, you will compute a KDE layer by defining a bandwidth of 600 meter. Notice that in the code chunk below, the sigma value used is 0.6. This is because the unit of measurement of childcareSG_ppp.km object is in kilometer, hence the 600m is 0.6km.\n\n\n\nkde_childcareSG_600 &lt;- density(childcareSG_ppp.km, sigma=0.6, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nFixed bandwidth method is very sensitive to highly skew distribution of spatial point patterns over geographical units for example urban versus rural. One way to overcome this problem is by using adaptive bandwidth instead.\n\n\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\n\n\n\n\n\n\n\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\n\n\n\n\n\n\nFor mapping purpose\n\ngridded_kde_childcareSG_bw &lt;- as.SpatialGridDataFrame.im(kde_childcareSG.bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n\n\n\n\n\n\nkde_childcareSG_bw_raster &lt;- raster(gridded_kde_childcareSG_bw)\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4145091, 0.2634761  (x, y)\nextent     : 3.040593, 56.09776, 16.59919, 50.32413  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -8.661207e-15, 40.99762  (min, max)\n\n\n\n\n\n\n\n\nNote\n\n\n\nNotice that the crs property is NA.\n\n\nAssigning projection systems\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4145091, 0.2634761  (x, y)\nextent     : 3.040593, 56.09776, 16.59919, 50.32413  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -8.661207e-15, 40.99762  (min, max)\n\n\n\n\n\n\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\nPlot the study area\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\n\n\n\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\n\n\n\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\nResale to km\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\n\npar(mfrow=c(2,2))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\n\npar(mfrow=c(2,2))\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn this section, we will perform the Clark-Evans test of aggregation for a spatial point pattern by using clarkevans.test() of statspat.\n\n\n\n\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.41992, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\n\n\n\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.78646, p-value = 0.0001163\nalternative hypothesis: two-sided\n\n\n\n\n\n\nclarkevans.test(childcare_jw_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_jw_ppp\nR = 0.58384, p-value &lt; 2.2e-16\nalternative hypothesis: two-sided"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.html#installing-and-loading-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03.html#installing-and-loading-packages",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Show Code\npacman::p_load(maptools, sf, raster, spatstat, tmap)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex03.html#importing-data",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "A point feature data providing both location and attribute information of childcare centres\n\nchildcare_sf &lt;- st_read(\"../data/geospatial/CHILDCARE.geojson\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `CHILDCARE' from data source \n  `C:\\dljyuan\\IS415-GAA\\data\\geospatial\\CHILDCARE.geojson' using driver `GeoJSON'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nA multipolygon feature data providing information of URA 2019 Master Plan Planning Subzone boundary data.\n\nsg_sf &lt;- st_read(dsn = \"../data/geospatial/\", \n                layer = \"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\dljyuan\\IS415-GAA\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 67 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6091 ymin: 1.16639 xmax: 104.0858 ymax: 1.471388\nGeodetic CRS:  WGS 84\n\n\nA polygon feature data providing information of URA 2014 Master Plan Planning Subzone boundary data.\n\nmpsz_sf &lt;- st_read(dsn = \"../data/geospatial/\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\dljyuan\\IS415-GAA\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nConverting CRS from WGS84 to SVY21\n\nmpsz_sf &lt;- st_transform(mpsz_sf, 3414)\nst_geometry(mpsz_sf)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\nsg_sf &lt;- st_transform(sg_sf, 3414)\nst_geometry(sg_sf)\n\nGeometry set for 1 feature \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 3040.593 ymin: 16599.19 xmax: 56097.76 ymax: 50324.13\nProjected CRS: SVY21 / Singapore TM\n\nst_geometry(childcare_sf)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.html#mapping-the-geospatial-data-sets-of-childcare-centres",
    "href": "Hands-on_Ex/Hands-on_Ex03.html#mapping-the-geospatial-data-sets-of-childcare-centres",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Static Mapping\n\ntmap_mode(\"plot\")\ntm_shape(mpsz_sf) +\n  tm_polygons() +\n  tm_shape(childcare_sf) +\n  tm_dots()\n\n\n\n\n\n\n\n\nInteractive Mode\n\ntmap_mode('view')\ntm_shape(childcare_sf)+\n  tm_dots()\n\n\n\n\n\n\ntmap_mode('plot')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.html#geospatial-data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex03.html#geospatial-data-wrangling",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Converting Geospatial data to Simple feature data frame\n\nchildcare &lt;- as_Spatial(childcare_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\nsg &lt;- as_Spatial(sg_sf)\n\nConvert to Generic SP Object\n\n\n\n\n\n\nNote\n\n\n\nAs spatstat requires the analytical data in ppp object form. There is no direct way to convert a Spatial classes into ppp object. We need to convert the Spatial classes into Spatial object first.\n\n\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\nNow, we will use as.ppp() function of spatstat to convert the spatial data into spatstat’s ppp object format.\n\nchildcare_ppp &lt;- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 2290 points\nwindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  2290 points\nAverage intensity 2.875673e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n                    (33590 x 23700 units)\nWindow area = 796335000 square units\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn spatial point patterns analysis an issue of significant is the presence of duplicates. The statistical methodology used for spatial point patterns processes is based largely on the assumption that process are simple, that is, that the points cannot be coincident.\n\n\nCheck for Duplicate\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\nTo show all of the co-indicence points\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    3    4    1    7    7    1    1    1    2    1    1    1    1    2 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    4    1    1    1    1    1    5    1    2    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    2    2    1    1    1    1    1    2    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   5    1    1    2    1    1    1    1    1    1    1    2    1    1    1    4 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1   10    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    4    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1   10 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n  10   10    1    1    1    1    1    1    1    1    1    1    1    1    3    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    1    2    1   10    1    1    1    1    1    1    2    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    3    1    1    1    1    1    3    1    1    1    1    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    2    1    1    3    1    1    1    2    1    2    2    2    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    1    1    2    1    1    1    1    1    2    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    2    1    1    1    1    1    1    3    1    1    1    4    1    1    1 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    4    1    1    1    1    1    1    1    1    1    1    2    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    3    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    1    1    1    1    1    1    1    2    7    1    3    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   2    1    1    1    1    1    1    1    3    2    1    1    1    1    1    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    2    1    1    2    1    1    1    2    1    1    1    2    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    1    1    1    1    1    2    3    2    1    2    1    1    1    1    5 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    3    1    1    1    1    1    1    5    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    4    1    1    1    1    1    1    1    1    3    1    1    2 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    2    1    1    1    1    1    1    3    1    1    1    1    1    1    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    2    1    1    1    1    1    2    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    2    2    1    1    1    1    1   10    1 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   2    1    1    1    2    1    3    1    1    1    1    1    1    1    1    2 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   2    1    1    3    1    1    1    1    1    1    3    1    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    3    1    1    1    3    1    3    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    2    2    2    1    1    2    3    1 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    2    1    1    1    1    3    1    1    3    1    1    1    1    2 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    2    1    2    1   10    1    4    2    2    1    1    1    1    4    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    3    1    1    1    1    4    1    2    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    3    1    1    1    1    1    2    1    1    1    2    2    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    4    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   2    1    1    1    1    1    1    1    1    1    1    1   10    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    3    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    3    3    3    3    1    1    1    1    1    1    1    3    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   3    1    1    1    1    1    1    1    1    3    1    3    1    1    1    3 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   2    2    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   2    1    1    1    3    1    1    1    1    2    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    4    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    3    1    3    3    3    3    1    1    1    1    3    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    3    1    2    1    1    1    1    1    3    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   3    1    3    1    3    1    1    1    1    1    1    1    1    1    2    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    2    3    1    1    1    1    1   10    1    2    4    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    4    1    7    1    1    1    1    3    1    1    1    1    1    3 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   3    1    1    1    1    3    1    1    1    3    1    3    1    1    1    3 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   3    1    1    1    1    2    1    1    1    1    3    1    1    3    1    2 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    3    3    1    1    3    1    2    1    3    1    3    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    3    1    1    1    1    3    1    1    1    1    3    1    3 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    1    1    3    1    1    3    1    1    1    1    2    1    1    1    3 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    3    1    1    1    1    1    1    3    3    3    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   1    1    1    2    1    1    3    1    1    1    1    1    1    1    3    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   3    3    3    3    3    1    1    1    3    1    4    3    1    3    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   3    4    3    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    4    1    1    1 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    3    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    3    1    1    1    1    1    1    1   10    1    1    1    1    1    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    3    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    2    2    3    1    1    1    7    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    1    1    1    1    1    2    1    1    1    1    4    2    3    2    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    2    2    1    1    1    1    2    2    3    1    1    1    1    1    2 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    3    3    2    2    2    2    2    2    2    2    2    3    3    3 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   2    2    3    2    3    2    3    2    2    2    2    2    2    2    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    2    1    1    1    1    1    1    3    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    1    2    1    1    1    1    5    1    1    1    1 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 \n   3    1    1    2    1    1    1    2    1    1    1    1    1    1    1    1 \n1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 \n   1    1    7    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1569 1570 1571 1572 1573 1574 1575 1576 1577 1578 1579 1580 1581 1582 1583 1584 \n   3    1    1    5    1    3    2    3    3    3    3    2    2    4    3    2 \n1585 1586 1587 1588 1589 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 \n   2    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1601 1602 1603 1604 1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 \n   1    1    1    1    1    5    1    1    3    1    1    1    1    1    1    1 \n1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    2 \n1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 \n   2    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 \n   2    2    2    3    2    2    2    2    2    2    2    4    2    2    2    2 \n1681 1682 1683 1684 1685 1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 \n   2    4    3    2    2    2    2    3    2    2    2    2    2    2    2    2 \n1697 1698 1699 1700 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 \n   2    2    4    2    2    2    2    2    2    2    1    2    2    2    2    2 \n1713 1714 1715 1716 1717 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 \n   3    2    2    2    2    2    2    2    2    2    3    2    2    2    2    2 \n1729 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 \n   2    2    2    2    2    2    2    5    2    2    2    7    2    2    2    2 \n1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 \n   2    2    2    2    2    2    7    2    4    2    2    2    2    2    2    2 \n1761 1762 1763 1764 1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 \n   2    2    2    2    2    2    2    2    3    2    2    2    2    2    1    2 \n1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 \n   2    2    2    3    2    2    2    2    3    2    2    2    2    3    2    2 \n1793 1794 1795 1796 1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 \n   2    2    2    2    3    2    2    3    3    3    3    3    2    3    2    3 \n1809 1810 1811 1812 1813 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 \n   3    3    3    2    2    3    3    2    3    3    2    2    2    2    2    3 \n1825 1826 1827 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 \n   2    3    3    3    3    2    2    2    2    2    3    2    2    2    3    2 \n1841 1842 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 \n   3    3    2    2    2    2    3    3    3    3    3    3    3    2    2    3 \n1857 1858 1859 1860 1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872 \n   2    2    2    2    3    3    3    3    2    2    3    3    2    2    3    2 \n1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 \n   3    3    2    2    3    3    2    2    3    4    3    3    2    3    2    2 \n1889 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 \n   3    2    2    2    2    3    2    2    2    7    2    1    2    7    2    2 \n1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 \n   4    2    2    2    2    2    2    2    2    2    2    2    2    2    2    2 \n1921 1922 1923 1924 1925 1926 1927 1928 1929 1930 1931 1932 1933 1934 1935 1936 \n   2    2    2    2    2    2    2    2    2    2    2    2    2    2    2    2 \n1937 1938 1939 1940 1941 1942 1943 1944 1945 1946 1947 1948 1949 1950 1951 1952 \n   2    2    2    2    2    2    5    2    2    2    2    2    4    1    1    1 \n1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 1963 1964 1965 1966 1967 1968 \n   1    1    1    1    1    1    1    1    1    3    3    3    3    1    3    1 \n1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 1979 1980 1981 1982 1983 1984 \n   3    3    3    3    3    3    3    3    3    3    3    3    3    1    3    3 \n1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 \n   3    3    3    3    3    3    3    3    3    3    3    1    1    3    3    3 \n2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 \n   2    3    3    3    3    3    4    3    2    3    3    3    3    3    3    3 \n2017 2018 2019 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 \n   3    3    3    3    3    3    3    3    2    3    3    3    2    2    2    2 \n2033 2034 2035 2036 2037 2038 2039 2040 2041 2042 2043 2044 2045 2046 2047 2048 \n   3    2    2    2    2    2    2    2    4    2    2    2    2    1    2    2 \n2049 2050 2051 2052 2053 2054 2055 2056 2057 2058 2059 2060 2061 2062 2063 2064 \n   2    2    2    2    2    3    2    3    2    2    2    3    3    2    2    2 \n2065 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077 2078 2079 2080 \n   3    2    3    2    2    2    2    2    2    3    2    2    3    2    2    2 \n2081 2082 2083 2084 2085 2086 2087 2088 2089 2090 2091 2092 2093 2094 2095 2096 \n   2    2    2    2    2    2    2    2    2    2    2    2    2    2    2    2 \n2097 2098 2099 2100 2101 2102 2103 2104 2105 2106 2107 2108 2109 2110 2111 2112 \n   2    2    3    2    2    2    2    2    2    2    2    2    3    2    2    2 \n2113 2114 2115 2116 2117 2118 2119 2120 2121 2122 2123 2124 2125 2126 2127 2128 \n   2    2    2    2    2    2    4    2    7    2    2    2    1    2    2    2 \n2129 2130 2131 2132 2133 2134 2135 2136 2137 2138 2139 2140 2141 2142 2143 2144 \n   2    1    2    2    2    2    2    7    2    4    2    2    2    2    2    2 \n2145 2146 2147 2148 2149 2150 2151 2152 2153 2154 2155 2156 2157 2158 2159 2160 \n   2    2    2    2    2    2    2    2    2    3    2    2    2    2    2    2 \n2161 2162 2163 2164 2165 2166 2167 2168 2169 2170 2171 2172 2173 2174 2175 2176 \n   1    2    2    2    2    3    2    2    3    1    2    2    2    2    2    2 \n2177 2178 2179 2180 2181 2182 2183 2184 2185 2186 2187 2188 2189 2190 2191 2192 \n   2    2    1    3    2    2    2    3    2    2    2    2    2    2    2    2 \n2193 2194 2195 2196 2197 2198 2199 2200 2201 2202 2203 2204 2205 2206 2207 2208 \n   2    2    2    2    2    2    2    2    2    2    2    2    2    2    2    2 \n2209 2210 2211 2212 2213 2214 2215 2216 2217 2218 2219 2220 2221 2222 2223 2224 \n   2    2    2    2    2    4    2    7    2    7    2    2    4    2    2    2 \n2225 2226 2227 2228 2229 2230 2231 2232 2233 2234 2235 2236 2237 2238 2239 2240 \n   2    2    3    2    2    2    2    2    2    2    2    2    2    4    2    2 \n2241 2242 2243 2244 2245 2246 2247 2248 2249 2250 2251 2252 2253 2254 2255 2256 \n   2    2    2    2    3    2    2    2    2    2    2    2    2    2    2    2 \n2257 2258 2259 2260 2261 2262 2263 2264 2265 2266 2267 2268 2269 2270 2271 2272 \n   2    2    2    2    2    4    2    2    2    2    2    2    2    2    2    4 \n2273 2274 2275 2276 2277 2278 2279 2280 2281 2282 2283 2284 2285 2286 2287 2288 \n   2    2    2    2    2    2    2    3    3    2    2    2    2    2    2    2 \n2289 2290 \n   2    2 \n\n\nTo count the number of co-indicence points\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 885\n\n\nTo view the location of duplicate points\n\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\ntmap_mode('plot')\n\n\n\n\n\n\n\nNote\n\n\n\n3 Ways To Overcome: 1) Delete duplicates - Mean that some useful point events will be lost 2) Use jittering - which will add a small perturbation to the duplicate points so that they do not occupy the exact same space 3) Take them into account as marks - Make each point “unique” and then attach the duplicates of the points to the patterns as marks, as attributes of the points\n\n\nJittering Approach\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\nCheck again for duplicates\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE\n\n\n\n\n\n\n\n\nNote\n\n\n\nWhen analysing spatial point patterns, it is a good practice to confine the analysis with a geographical area like Singapore boundary. In spatstat, an object called owin is specially designed to represent this polygonal region.\n\n\nCovert sg SpatialPolygon object into owin object of spatstat\n\nsg_owin &lt;- as(sg_sp, \"owin\")\nplot(sg_owin)\n\n\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n34 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         82   1034550.0      1.48e-03\npolygon 2        104   1100540.0      1.58e-03\npolygon 3         67    732165.0      1.05e-03\npolygon 4        156   2364690.0      3.39e-03\npolygon 5         26     72188.5      1.04e-04\npolygon 6         16     35110.5      5.04e-05\npolygon 7        207   3885250.0      5.57e-03\npolygon 8         70    483000.0      6.93e-04\npolygon 9         23     71722.4      1.03e-04\npolygon 10        43    139236.0      2.00e-04\npolygon 11        21     35903.4      5.15e-05\npolygon 12       105    832107.0      1.19e-03\npolygon 13        19     63805.9      9.15e-05\npolygon 14        75    955310.0      1.37e-03\npolygon 15       132   2985250.0      4.28e-03\npolygon 16       192   4796520.0      6.88e-03\npolygon 17        77   1430070.0      2.05e-03\npolygon 18        21     47547.0      6.82e-05\npolygon 19       473  26400400.0      3.79e-02\npolygon 20       320   4789260.0      6.87e-03\npolygon 21        37    239043.0      3.43e-04\npolygon 22        18     34466.7      4.94e-05\npolygon 23        13     20190.5      2.90e-05\npolygon 24        34    126330.0      1.81e-04\npolygon 25        96    573783.0      8.23e-04\npolygon 26        62    920917.0      1.32e-03\npolygon 27        76   1087280.0      1.56e-03\npolygon 28        36     38729.5      5.56e-05\npolygon 29       261  10256000.0      1.47e-02\npolygon 30       106   1949160.0      2.80e-03\npolygon 31       537  24890800.0      3.57e-02\npolygon 32        16     19671.9      2.82e-05\npolygon 33        38    414592.0      5.95e-04\npolygon 34      4033 604202000.0      8.67e-01\nenclosing rectangle: [3040.59, 56097.76] x [16599.19, 50324.13] units\n                     (53060 x 33720 units)\nWindow area = 697027000 square units\nFraction of frame area: 0.39"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.html#combining-point-events-object-and-owin-object",
    "href": "Hands-on_Ex/Hands-on_Ex03.html#combining-point-events-object-and-owin-object",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "childcareSG_ppp = childcare_ppp[sg_owin]\nplot(childcareSG_ppp)\n\n\n\n\n\n\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  2289 points\nAverage intensity 3.283947e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n34 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         82   1034550.0      1.48e-03\npolygon 2        104   1100540.0      1.58e-03\npolygon 3         67    732165.0      1.05e-03\npolygon 4        156   2364690.0      3.39e-03\npolygon 5         26     72188.5      1.04e-04\npolygon 6         16     35110.5      5.04e-05\npolygon 7        207   3885250.0      5.57e-03\npolygon 8         70    483000.0      6.93e-04\npolygon 9         23     71722.4      1.03e-04\npolygon 10        43    139236.0      2.00e-04\npolygon 11        21     35903.4      5.15e-05\npolygon 12       105    832107.0      1.19e-03\npolygon 13        19     63805.9      9.15e-05\npolygon 14        75    955310.0      1.37e-03\npolygon 15       132   2985250.0      4.28e-03\npolygon 16       192   4796520.0      6.88e-03\npolygon 17        77   1430070.0      2.05e-03\npolygon 18        21     47547.0      6.82e-05\npolygon 19       473  26400400.0      3.79e-02\npolygon 20       320   4789260.0      6.87e-03\npolygon 21        37    239043.0      3.43e-04\npolygon 22        18     34466.7      4.94e-05\npolygon 23        13     20190.5      2.90e-05\npolygon 24        34    126330.0      1.81e-04\npolygon 25        96    573783.0      8.23e-04\npolygon 26        62    920917.0      1.32e-03\npolygon 27        76   1087280.0      1.56e-03\npolygon 28        36     38729.5      5.56e-05\npolygon 29       261  10256000.0      1.47e-02\npolygon 30       106   1949160.0      2.80e-03\npolygon 31       537  24890800.0      3.57e-02\npolygon 32        16     19671.9      2.82e-05\npolygon 33        38    414592.0      5.95e-04\npolygon 34      4033 604202000.0      8.67e-01\nenclosing rectangle: [3040.59, 56097.76] x [16599.19, 50324.13] units\n                     (53060 x 33720 units)\nWindow area = 697027000 square units\nFraction of frame area: 0.39"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.html#first-order-spatial-point-patterns-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex03.html#first-order-spatial-point-patterns-analysis",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Computing kernel density estimation using automatic bandwidth selection method ::: callout-note Configuration of Density() - bw.diggle() automatic bandwidth selection method. Other recommended methods are bw.CvL(), bw.scott() or bw.ppl(). - The smoothing kernel used is gaussian, which is the default. Other smoothing methods are: “epanechnikov”, “quartic” or “disc”. - The intensity estimate is corrected for edge effect bias by using method described by Jones (1993) and Diggle (2010, equation 18.9). The default is FALSE. :::\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \n\n\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nRetrieve the bandwidth used to compute the kde layer\n\nbw &lt;- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n305.2404 \n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe density values of the output range from 0 to 0.000035 which is way too small to comprehend. This is because the default unit of measurement of svy21 is in meter. As a result, the density values computed is in “number of points per square meter”.\n\n\n\nchildcareSG_ppp.km &lt;- rescale(childcareSG_ppp, 1000, \"km\")\n\nRe-run density()\n\nkde_childcareSG.bw &lt;- density(childcareSG_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG.bw)\n\n\n\n\n\n\n\n\n\n\n\n\nbw.CvL(childcareSG_ppp.km)\n\n  sigma \n4.53932 \n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.112227 1.346566 \n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.2107976 \n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.3052404 \n\n\n\n\n\n\n\n\nNote\n\n\n\nBaddeley et. (2016) suggested the use of the bw.ppl() algorithm because in ther experience it tends to produce the more appropriate values when the pattern consists predominantly of tight clusters. But they also insist that if the purpose of once study is to detect a single tight cluster in the midst of random noise then the bw.diggle() method seems to work best.\n\n\nComparing bw.diggle & bw.ppl\n\nkde_childcareSG.ppl &lt;- density(childcareSG_ppp.km, \n                               sigma=bw.ppl, \n                               edge=TRUE,\n                               kernel=\"gaussian\")\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")\n\n\n\n\n\n\n\n\n\n\n\n\npar(mfrow=c(2,2))\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"Gaussian\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.html#fixed-and-adaptive-kde",
    "href": "Hands-on_Ex/Hands-on_Ex03.html#fixed-and-adaptive-kde",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Note\n\n\n\nNext, you will compute a KDE layer by defining a bandwidth of 600 meter. Notice that in the code chunk below, the sigma value used is 0.6. This is because the unit of measurement of childcareSG_ppp.km object is in kilometer, hence the 600m is 0.6km.\n\n\n\nkde_childcareSG_600 &lt;- density(childcareSG_ppp.km, sigma=0.6, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nFixed bandwidth method is very sensitive to highly skew distribution of spatial point patterns over geographical units for example urban versus rural. One way to overcome this problem is by using adaptive bandwidth instead.\n\n\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\n\n\n\n\n\n\n\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.html#converting-kde-into-grid-object",
    "href": "Hands-on_Ex/Hands-on_Ex03.html#converting-kde-into-grid-object",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "For mapping purpose\n\ngridded_kde_childcareSG_bw &lt;- as.SpatialGridDataFrame.im(kde_childcareSG.bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n\n\n\n\n\n\nkde_childcareSG_bw_raster &lt;- raster(gridded_kde_childcareSG_bw)\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4145091, 0.2634761  (x, y)\nextent     : 3.040593, 56.09776, 16.59919, 50.32413  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -8.661207e-15, 40.99762  (min, max)\n\n\n\n\n\n\n\n\nNote\n\n\n\nNotice that the crs property is NA.\n\n\nAssigning projection systems\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4145091, 0.2634761  (x, y)\nextent     : 3.040593, 56.09776, 16.59919, 50.32413  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -8.661207e-15, 40.99762  (min, max)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.html#visualising-the-output-in-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex03.html#visualising-the-output-in-tmap",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "tm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.html#comparing-spatial-point-patterns-using-kde",
    "href": "Hands-on_Ex/Hands-on_Ex03.html#comparing-spatial-point-patterns-using-kde",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "pg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\nPlot the study area\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\n\n\n\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\n\n\n\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\nResale to km\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\n\npar(mfrow=c(2,2))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\n\npar(mfrow=c(2,2))\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.html#nearest-neighbour-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex03.html#nearest-neighbour-analysis",
    "title": "1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Note\n\n\n\nIn this section, we will perform the Clark-Evans test of aggregation for a spatial point pattern by using clarkevans.test() of statspat.\n\n\n\n\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.41992, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\n\n\n\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.78646, p-value = 0.0001163\nalternative hypothesis: two-sided\n\n\n\n\n\n\nclarkevans.test(childcare_jw_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_jw_ppp\nR = 0.58384, p-value &lt; 2.2e-16\nalternative hypothesis: two-sided"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01.html",
    "title": "Nothing here",
    "section": "",
    "text": "Gitignoring large file from pushing into Github\n\npacman:: p_load(arrow, lubridate, tidyverse, sf)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01.html#getting-started",
    "href": "In-class_Ex/In-class_Ex01.html#getting-started",
    "title": "Nothing here",
    "section": "",
    "text": "Gitignoring large file from pushing into Github\n\npacman:: p_load(arrow, lubridate, tidyverse, sf)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03.html",
    "title": "Kernel Density Estimation",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03.html#convert-to-generic-spatial-object",
    "href": "In-class_Ex/In-class_Ex03.html#convert-to-generic-spatial-object",
    "title": "Kernel Density Estimation",
    "section": "Convert to Generic Spatial Object",
    "text": "Convert to Generic Spatial Object\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03.html#create-ppp-object-sf-method",
    "href": "In-class_Ex/In-class_Ex03.html#create-ppp-object-sf-method",
    "title": "Kernel Density Estimation",
    "section": "Create ppp Object: sf Method",
    "text": "Create ppp Object: sf Method\n\nchildcare_ppp &lt;- as.ppp(childcare_sf)\nglimpse(childcare_ppp)\n\nList of 6\n $ window    :List of 4\n  ..$ type  : chr \"rectangle\"\n  ..$ xrange: num [1:2] 11810 45404\n  ..$ yrange: num [1:2] 25596 49301\n  ..$ units :List of 3\n  .. ..$ singular  : chr \"unit\"\n  .. ..$ plural    : chr \"units\"\n  .. ..$ multiplier: num 1\n  .. ..- attr(*, \"class\")= chr \"unitname\"\n  ..- attr(*, \"class\")= chr \"owin\"\n $ n         : int 1925\n $ x         : num [1:1925] 40986 28309 17829 25580 38981 ...\n $ y         : num [1:1925] 33848 45530 36607 29222 32483 ...\n $ markformat: chr \"vector\"\n $ marks     : chr [1:1925] \"kml_1\" \"kml_2\" \"kml_3\" \"kml_4\" ...\n - attr(*, \"class\")= chr \"ppp\"\n\n\n\nany(duplicated(childcare_ppp))\n\n[1] FALSE\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 0\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03.html#create-owin-object-sf-method",
    "href": "In-class_Ex/In-class_Ex03.html#create-owin-object-sf-method",
    "title": "Kernel Density Estimation",
    "section": "Create owin Object: sf Method",
    "text": "Create owin Object: sf Method\n\nsg_owin &lt;- as.owin(sg_sf)\nplot(sg_owin)\n\n\n\n\n\n\n\n\n\nchildcareSG_ppp &lt;- childcare_ppp[sg_owin]\nplot(childcareSG_ppp)\n\n\n\n\n\n\n\n\n\npg &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"JURONG WEST\")\n\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Punggol\")\n\n\n\n\n\n\n\nplot(tm, main = \"Tampines\")\n\n\n\n\n\n\n\nplot(ck, main = \"Choa Chu Kang\")\n\n\n\n\n\n\n\nplot(jw, main = \"Jurong West\")"
  }
]